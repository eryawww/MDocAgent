[
  "MULTILINGUAL SEQUENCE-TO-SEQUENCE SPEECH RECOGNITION: ARCHITECTURE, TRANSFER LEARNING, AND LANGUAGE MODELING Jaejin Cho1,\u2021 , Murali Karthick Baskar2,\u2021, Ruizhi Li1,\u2021, Matthew Wiesner1, Sri Harish Mallidi3, Nelson Yalta4, Martin Kara\ufb01\u00b4at2, Shinji Watanabe1, Takaaki Hori5 1Johns Hopkins University, 2Brno University of Technology, 3Amazon, 4Waseda University, 5Mitsubishi Electric Research Laboratories (MERL) {ruizhili,jcho52,shinjiw}@jhu.edu,{baskar,karafiat}@fit.vutbr.cz,thori@merl.com ABSTRACT Sequence-to-sequence (seq2seq) approach for low-resource ASR is a relatively new direction in speech research. The approach bene\ufb01ts by performing model training without using lexicon and alignments. However, this poses a new problem of requiring more data compared to conventional DNN-HMM systems.",
  "The approach bene\ufb01ts by performing model training without using lexicon and alignments. However, this poses a new problem of requiring more data compared to conventional DNN-HMM systems. In this work, we attempt to use data from 10 BABEL languages to build a multi- lingual seq2seq model as a prior model, and then port them towards 4 other BABEL languages using transfer learning approach. We also explore different architectures for improving the prior multilingual seq2seq model. The paper also discusses the effect of integrating a recurrent neural network language model (RNNLM) with a seq2seq model during decoding. Experimental results show that the trans- fer learning approach from the multilingual model shows substan- tial gains over monolingual models across all 4 BABEL languages. Incorporating an RNNLM also brings signi\ufb01cant improvements in terms of %WER, and achieves recognition performance comparable to the models trained with twice more training data. Index Terms: Automatic speech recognition (ASR), sequence to sequence, multilingual setup, transfer learning, language modeling 1.",
  "Index Terms: Automatic speech recognition (ASR), sequence to sequence, multilingual setup, transfer learning, language modeling 1. INTRODUCTION The sequence-to-sequence (seq2seq) model proposed in [1, 2, 3] is a neural architecture for performing sequence classi\ufb01cation and later adopted to perform speech recognition in [4, 5, 6]. The model al- lows to integrate the main blocks of ASR such as acoustic model, alignment model and language model into a single framework. The recent ASR advancements in connectionist temporal classi\ufb01cation (CTC) [6, 5] and attention [4, 7] based approaches has created larger interest in speech community to use seq2seq models. To leverage performance gains from this model as similar or better to conven- tional hybrid RNN/DNN-HMM models requires a huge amount of data [8]. Intuitively, this is due to the wide-range role of the model in performing alignment and language modeling along with acoustic to character label mapping at each iteration.",
  "Intuitively, this is due to the wide-range role of the model in performing alignment and language modeling along with acoustic to character label mapping at each iteration. In this paper, we explore the multilingual training approaches [9, 10, 11] used in hybrid DNN/RNN-HMMs to incorporate them into the seq2seq models. In a context of applications of multilingual approaches towards seq2seq model, CTC is mainly used instead of the attention models. A multilingual CTC is proposed in [12], which uses a universal phoneset, FST decoder and language model. The \u2021 All three authors share equal contribution authors also use linear hidden unit contribution (LHUC) [13] tech- nique to rescale the hidden unit outputs for each language as a way to adapt to a particular language. Another work [14] on multilingual CTC shows the importance of language adaptive vectors as auxil- iary input to the encoder in multilingual CTC model. The decoder used here is a simple argmax decoder. An extensive analysis on multilingual CTC mainly focusing on improving under limited data condition is performed in [15].",
  "The decoder used here is a simple argmax decoder. An extensive analysis on multilingual CTC mainly focusing on improving under limited data condition is performed in [15]. Here, the authors use a word level FST decoder integrated with CTC during decoding. On a similar front, attention models are explored within a multi- lingual setup in [16, 17] based on attention-based seq2seq to build a model from multiple languages. The data is just combined together assuming the target languages are seen during the training. And, hence no special transfer learning techniques were used here to ad- dress the unseen languages during training. The main motivation and contribution behind this work is as follows: \u2022 To incorporate the existing multilingual approaches in a joint CTC-attention [18] (seq2seq) framework, which uses a sim- ple beam-search decoder as described in sections 2 and 4 \u2022 Investigate the effectiveness of transferring a multilingual model to a target language under various data sizes. This is explained in section 4.3. \u2022 Tackle the low-resource data condition with both transfer learning and including a character-based RNNLM trained with multiple languages. Section 4.4 explains this in detail.",
  "This is explained in section 4.3. \u2022 Tackle the low-resource data condition with both transfer learning and including a character-based RNNLM trained with multiple languages. Section 4.4 explains this in detail. 2. SEQUENCE-TO-SEQUENCE MODEL In this work, we use the attention based approach [2] as it pro- vides an effective methodology to perform sequence-to-sequence (seq2seq) training. Considering the limitations of attention in per- forming monotonic alignment [19, 20], we choose to use CTC loss function to aid the attention mechanism in both training and decod- ing. The basic network architecture is shown in Fig. 1. Let X = (xt|t = 1, . . . , T) be a T-length speech feature se- quence and C = (cl|l = 1, . . . , L) be a L-length grapheme se- quence.",
  "Let X = (xt|t = 1, . . . , T) be a T-length speech feature se- quence and C = (cl|l = 1, . . . , L) be a L-length grapheme se- quence. A multi-objective learning framework Lmol proposed in [18] is used in this work to unify attention loss patt(C|X) and CTC loss pctc(C|X) with a linear interpolation weight \u03bb, as follows: Lmod = \u03bb log pctc(C|X) + (1 \u2212\u03bb) log p\u2217 att(C|X) (1) The uni\ufb01ed model allows to obtain both monotonicity and effective sequence level training. arXiv:1810.03459v1  [cs.CL]  4 Oct 2018",
  "Deep CNN (VGG net)  BLSTM  Attention Decoder  RNN-LM  CTC  cl  cl-1  xt  x1  xT  \u2026\u2026  \u2026\u2026  \u2026\u2026  \u2026\u2026  Shared  Encoder  Joint  Decoder  Fig. 1: Hybrid attention/CTC network with LM extension: the shared encoder is trained by both CTC and attention model objec- tives simultaneously. The joint decoder predicts an output label se- quence by the CTC, attention decoder and RNN-LM. patt (C|X) represents the posterior probability of character label sequence C w.r.t input sequence X based on the attention approach, which is decomposed with the probabilistic chain rule, as follows: p\u2217 att (C|X) \u2248 L Y l=1 p (cl|c\u2217 1, ...., c\u2217 l\u22121, X) , (2) where c\u2217 l denotes the ground truth history. Detailed explanations about the attention mechanism is described later. Similarly, pctc (C|X) represents the posterior probability based on the CTC approach.",
  "Detailed explanations about the attention mechanism is described later. Similarly, pctc (C|X) represents the posterior probability based on the CTC approach. pctc (C|X) \u2248 X Z\u2208Z(C) p(Z|X), (3) where Z = (zt|t = 1, . . . , T) is a CTC state sequence composed of the original grapheme set and the additional blank symbol. Z(C) is a set of all possible sequences given the character sequence C. The following paragraphs explain the encoder, attention de- coder, CTC, and joint decoding used in our approach. Encoder In our approach, both CTC and attention use the same encoder func- tion, as follows: ht = Encoder(X), (4) where ht is an encoder output state at t. As an encoder function Encoder(\u00b7), we use bidirectional LSTM (BLSTM) or deep CNN followed by BLSTMs. Convolutional neural networks (CNN) has achieved great success in image recognition [21]. Previous studies applying CNN in seq2seq speech recognition [22] also showed that incorporating a deep CNNs in the encoder could further boost the performance.",
  "Convolutional neural networks (CNN) has achieved great success in image recognition [21]. Previous studies applying CNN in seq2seq speech recognition [22] also showed that incorporating a deep CNNs in the encoder could further boost the performance. In this work, we investigate the effect of convolutional layers in joint CTC-attention framework for multilingual setting. We use the initial 6 layers of VGG net architecture [21] in table 2. For each speech feature image, one feature map is formed initially. VGG net then extracts 128 feature maps, where each feature map is downsam- pled to (1/4 \u00d7 1/4) images along time-frequency axis via the two maxpooling layers with stride = 2. Attention Decoder: Location aware attention mechanism [23] is used in this work. Equa- tion (5) denotes the output of location aware attention, where alt acts as an attention weight. alt = LocationAttention \u0010 {al\u22121}T t=1 , ql\u22121, ht \u0011 . (5) Here, ql\u22121 denotes the decoder hidden state, ht is the encoder out- put state as shown in equation (4).",
  "alt = LocationAttention \u0010 {al\u22121}T t=1 , ql\u22121, ht \u0011 . (5) Here, ql\u22121 denotes the decoder hidden state, ht is the encoder out- put state as shown in equation (4). The location attention function represents a convolution function * as in equation (6). It maps the attention weight of the previous label al\u22121 to a multi channel view ft for better representation. ft = K \u2217al\u22121, (6) elt = gT tanh(Lin(ql\u22121) + Lin(ht) + LinB(ft)), (7) alt = Softmax({elt}T t=1) (8) Equation (7) provides the unnormalized attention vectors computed with the learnable vector g, linear transformation Lin(\u00b7), and af\ufb01ne transformation LinB(\u00b7). Equation (8) computes a normalized atten- tion weight based on the softmax operation Softmax(\u00b7). Finally, the context vector rl is obtained by the weighted summation of the en- coder output state ht over entire frames with the attention weight as follows: rl = T X t=1 altht.",
  "Finally, the context vector rl is obtained by the weighted summation of the en- coder output state ht over entire frames with the attention weight as follows: rl = T X t=1 altht. (9) The decoder function is an LSTM layer which decodes the next character output label cl from their previous label cl\u22121, hidden state of the decoder ql\u22121 and attention output rl, as follows: p (cl|c1, ...., cl\u22121, X) = Decoder(rl, ql\u22121, cl\u22121) (10) This equation is incrementally applied to form p\u2217 att in equation (2). Connectionist temporal classi\ufb01cation (CTC): Unlike the attention approach, CTC do not use any speci\ufb01c decoder. Instead it invokes two important components to perform character level training and decoding. First component, is an RNN based en- coding module p(Z|X). The second component contains a language model and state transition module. The CTC formalism is a special case [6, 24] of hybrid DNN-HMM framework with an inclusion of Bayes rule to obtain p(C|X).",
  "The second component contains a language model and state transition module. The CTC formalism is a special case [6, 24] of hybrid DNN-HMM framework with an inclusion of Bayes rule to obtain p(C|X). Joint decoding: Once we have both CTC and attention-based seq2seq models trained, both are jointly used for decoding as below: log phyp(cl|c1, ...., cl\u22121, X) = \u03b1 log pctc(cl|c1, ...., cl\u22121, X) +(1 \u2212\u03b1) log patt(cl|c1, ...., cl\u22121, X) (11) Here log phyp is a \ufb01nal score used during beam search. \u03b1 controls the weight between attention and CTC models. \u03b1 and multi-task learn- ing weight \u03bb in equation (1) are set differently in our experiments.",
  "Table 1: Details of the BABEL data used for performing the multi- lingual experiments Usage Language Train Eval # of characters # spkrs. # hours # spkrs.",
  "Table 1: Details of the BABEL data used for performing the multi- lingual experiments Usage Language Train Eval # of characters # spkrs. # hours # spkrs. # hours Train Cantonese 952 126.73 120 17.71 3302 Bengali 720 55.18 121 9.79 66 Pashto 959 70.26 121 9.95 49 Turkish 963 68.98 121 9.76 66 Vietnamese 954 78.62 120 10.9 131 Haitian 724 60.11 120 10.63 60 Tamil 724 62.11 121 11.61 49 Kurdish 502 37.69 120 10.21 64 Tokpisin 482 35.32 120 9.88 55 Georgian 490 45.35 120 12.30 35 Target Assamese 720 54.35 120 9.58 66 Tagalog 966 44.0 120 10.60 56 Swahili 491 40.0 120 10.58 56 Lao 733 58.79 119 10.50 54 3.",
  "DATA DETAILS AND EXPERIMENTAL SETUP In this work, the experiments are conducted using the BABEL speech corpus collected from the IARPA babel program. The cor- pus is mainly composed of conversational telephone speech (CTS) but some scripted recordings and far \ufb01eld recordings are presented as well. Table 1 presents the details of the languages used in this work for training and evaluation. 80 dimensional Mel-\ufb01lterbank (fbank) features are then ex- tracted from the speech samples using a sliding window of size 25 ms with 10ms stride. KALDI toolkit [25] is used to perform the fea- ture processing. The fbank features are then fed to a seq2seq model with the following con\ufb01guration: The Bi-RNN [26] models mentioned above uses a LSTM [27] cell followed by a projection layer (BLSTMP). In our experiments below, we use only a character-level seq2seq model trained by CTC and attention decoder. Thus in the following experiments we intend to use character error rate (% CER) as a suitable measure to ana- lyze the model performance.",
  "In our experiments below, we use only a character-level seq2seq model trained by CTC and attention decoder. Thus in the following experiments we intend to use character error rate (% CER) as a suitable measure to ana- lyze the model performance. However, in section 4.4 we integrate a character-level RNNLM [28] with seq2seq model externally and showcase the performance in terms of word error rate (% WER). In this case the words are obtained by concatenating the characters and the space together for scoring with reference words. All exper- iments are implemented in ESPnet, end-to-end speech processing toolkit [29]. 4. MULTILINGUAL EXPERIMENTS Multilingual approaches used in hybrid RNN/DNN-HMM sys- tems [11] have been used for for tackling the problem of low- resource data condition. Some of these approaches include language adaptive training and shared layer retraining [30]. Among them, the most bene\ufb01ted method is the parameter sharing technique [11]. To incorporate the former approach into encoder, CTC and attention de- coder model,",
  "Some of these approaches include language adaptive training and shared layer retraining [30]. Among them, the most bene\ufb01ted method is the parameter sharing technique [11]. To incorporate the former approach into encoder, CTC and attention de- coder model, we performed the following experiments: \u2022 Stage 0 - Naive training combining all languages \u2022 Stage 1 - Retraining the decoder (both CTC and attention) after initializing with the multilingual model from stage-0 Table 2: Experiment details Model Con\ufb01guration Encoder Bi-RNN # encoder layers 5 # encoder units 320 # projection units 320 Decoder Bi-RNN # decoder layers 1 # decoder units 300 # projection units 300 Attention Location-aware # feature maps 10 # window size 100 Training Con\ufb01guration MOL 5e\u22121 Optimizer AdaDelta Initial learning rate 1.",
  "0 AdaDelta \u03f5 1e\u22128 AdaDelta \u03f5 decay 1e\u22122 Batch size 30 Optimizer AdaDelta Decoding Con\ufb01guration Beam size 20 ctc-weight 3e\u22121 (a) Convolutional layers in joint CTC-attention CNN Model Con\ufb01guration -2 components Component 1 2 convolution layers Convolution 2D in = 1, out = 64, \ufb01lter = 3\u00d7 3 Convolution 2D in = 64, out = 64, \ufb01lter = 3\u00d7 3 Maxpool 2D patch = 2\u00d72, stride = 2\u00d72 Component 2 2 convolution layers Convolution 2D in = 64, out = 128, \ufb01lter = 3\u00d7 3 Convolution 2D in = 128, out = 128, \ufb01lter = 3\u00d7 3 Maxpool 2D patch = 2\u00d72,",
  "out = 128, \ufb01lter = 3\u00d7 3 Convolution 2D in = 128, out = 128, \ufb01lter = 3\u00d7 3 Maxpool 2D patch = 2\u00d72, stride = 2\u00d72 \u2022 Stage 2 - The resulting model obtained from stage-1 is further retrained across both encoder and decoder Table 4: Comparison of naive approach and training only the last layer performed using the Assamese language Model type Retraining % CER % Absolute gain Monolingual - 45.6 - Multi. (after 4th epoch) Stage 1 61.3 -15.7 Multi. (after 4th epoch) Stage 2 44.0 1.6 Multi. (after 15th epoch) Stage 2 41.3 4.3 4.1. Stage 0 - Naive approach In this approach, the model is \ufb01rst trained with 10 multiple languages as denoted in table 1 approximating to 600 hours of training data. data from all languages available during training is used to build a single seq2seq model.",
  "Stage 0 - Naive approach In this approach, the model is \ufb01rst trained with 10 multiple languages as denoted in table 1 approximating to 600 hours of training data. data from all languages available during training is used to build a single seq2seq model. The model is trained with a character label set composed of characters from all languages including both train and target set as mentioned in table 1. The model provides better generalization across languages. Languages with limited data when",
  "Table 3: Recognition performance of naive multilingual approach for eval set of 10 BABEL training languages trained with the train set of same languages %CER on Eval set Target languages for Bengali Cantonese Georgian Haitian Kurmanji Pashto Tamil Turkish Tokpisin Vietnamese Monolingual - BLSTMP 43.4 37.4 35.4 39.7 55.0 37.3 55.3 50.3 32.7 54.3 Multilingual - BLSTMP 42.9 36.3 38.9 38.5 52.1 39.0 48.5 36.4 31.7 41.0 + VGG 39.6 34.3 36.0 34.5 49.9 34.7 45.5 28.7 33.7 37.4 trained with other languages allows them to be robust and helps in improving the recognition performance. In spite of being simple, the model has limitations in keeping the target language data unseen during training.",
  "In spite of being simple, the model has limitations in keeping the target language data unseen during training. Comparison of VGG-BLSTM and BLSTMP Table 3 shows the recognition performance of naive multilingual approach using BLSTMP and VGG model against a monolingual model trained with BLSTMP. The results clearly indicate that hav- ing a better architecture such as VGG-BLSTM helps in improving multilingual performance. Except Pashto, Georgian and Tokpisin, the multilingual VGG-BLSTM model gave 8.8 % absolute gain in average over monolingual model. In case of multilingual BLSTMP, except Pashto and Georgian an absolute gain of 5.0 % in average is observed over monolingual model. Even though the VGG-BLSTM gave improvements, we were not able to perform stage-1 and stage-2 retraining with it due to time constraints. Thus, we proceed further with multilingual BLSTMP model for retraining experiments tabu- lated below. 4.2.",
  "Even though the VGG-BLSTM gave improvements, we were not able to perform stage-1 and stage-2 retraining with it due to time constraints. Thus, we proceed further with multilingual BLSTMP model for retraining experiments tabu- lated below. 4.2. Stage 1 - Retraining decoder only To alleviate the limitation in the previous approach, the \ufb01nal layer of the seq2seq model which is mainly responsible for classi\ufb01cation is retrained to the target language. Fig. 2: Difference in performance for 5 hours, 10 hours, 20 hours and full set of target language data used to retrain a multilingual model from stage-1 In previous works [11, 30] related to hybrid DNN/RNN models and CTC based models [12, 15] the softmax layer is only adapted. However in our case, the attention decoder and CTC decoder both have to be retrained to the target language. This means the CTC and attention layers are only updated for gradients during this stage. We found using SGD optimizer with initial learning rate of 1e\u22124 works better for retraining compared to AdaDelta.",
  "This means the CTC and attention layers are only updated for gradients during this stage. We found using SGD optimizer with initial learning rate of 1e\u22124 works better for retraining compared to AdaDelta. The learning rate is decayed in this training at a factor of 1e\u22121 if there is a drop in validation accuracy. Table 4 shows the performance of simply retraining the last layer using a single target language As- samese. 4.3. Stage 2 - Finetuning both encoder and decoder Based on the observations from stage-1 model in section 4.2, we found that simply retraining the decoder towards a target language resulted in degrading %CER the performance from 45.6 to 61.3. This is mainly due to the difference in distribution across encoder and decoder. So, to alleviate this difference the encoder and decoder is once again retrained or \ufb01ne-tuned using the model from stage-1. The optimizer used here is SGD as in stage-1, but the initial learning rate is kept to 1e\u22122 and decayed based on validation performance.",
  "So, to alleviate this difference the encoder and decoder is once again retrained or \ufb01ne-tuned using the model from stage-1. The optimizer used here is SGD as in stage-1, but the initial learning rate is kept to 1e\u22122 and decayed based on validation performance. The resulting model gave an absolute gain of 1.6% when \ufb01netuned a multilingual model after 4th epoch. Also, \ufb01netuning a model after 15th epoch gave an absolute gain of 4.3%. Table 5: Stage-2 retraining across all languages with full set of target language data % CER on Target Languages eval set Assamese Tagalog Swahili Lao Monolingual 45.6 43.1 33.1 42.1 Stage-2 retraining 41.3 37.9 29.1 38.7 To further investigate the performance of this approach across different target data sizes, we split the train set into \u223c5 hours, \u223c10 hours, \u223c20 hours and \u223cfull set.",
  "Since, in this approach the model is only \ufb01netuned by initializing from stage-1 model, the model archi- tecture is \ufb01xed for all data sizes. Figure 2 shows the effectiveness of \ufb01netuning both encoder and decoder. The gains from 5 to 10 hours was more compared to 20 hours to full set. Table 5 tabulates the % CER obtained by retraining the stage-1 model with \u223cfull set of target language data. An absolute gain is observed using stage-2 retraining across all languages compared to monolingual model. 4.4. Multilingual RNNLM In an ASR system, a language model (LM) takes an important role by incorporating external knowledge into the system. Conventional ASR systems combine an LM with an acoustic model by FST giv- ing a huge performance gain. This trend is also shown in general including hybrid ASR systems and neural network-based sequence- to-sequence ASR systems. The following experiments show a bene\ufb01t of using a language model in decoding with the previous stage-2 transferred models. Al-",
  "though the performance gains in %CER are also generally observed over all target languages, the improvement in %WER was more dis- tinctive. The results shown in the following Fig. 3 are in %WER. \u201cwhole\u201d in each \ufb01gure means we used all the available data for the target language as full set explained before. 83.2 79.7 75.8 71.9 76.4 73.1 69.9 65.3 50 60 70 80 90 5 10 20 whole WER (%) target language data (hrs) Assamese stage 2 retraining RNNLM added 84.1 78.8 75.5 71.4 76.5 71.1 67.7 64.3 50 60 70 80 90 5 10 20 whole WER (%) target language data (hrs) Tagalog stage 2 retraining RNNLM added 82.5 75.7 69.9 66.2 72.1 65.1 60.1 56.",
  "5 75.7 69.9 66.2 72.1 65.1 60.1 56.2 50 60 70 80 90 5 10 20 whole WER (%) target language data (hrs) Swahili stage 2 retraining RNNLM added 74.7 73.7 65.1 62.4 70.8 70.5 61.3 57.9 50 60 70 80 90 5 10 20 whole WER (%) target language data (hrs) Lao stage 2 retraining RNNLM added Fig. 3: Recognition performance after integrating RNNLM during decoding in %WER for different amounts of target data We used a character-level RNNLM, which was trained with 2- layer LSTM on character sequences. We use all available paired text in the corresponding target language to train the LM for the language. No external text data were used. All language mod- els are trained separately from the seq2seq models. When build- ing dictionary, we combined all the characters over all 15 languages mentioned in table 1 to make them work with transferred models.",
  "No external text data were used. All language mod- els are trained separately from the seq2seq models. When build- ing dictionary, we combined all the characters over all 15 languages mentioned in table 1 to make them work with transferred models. Regardless of the amount of data used for transfer learning, the RNNLM provides consistent gains across all languages over differ- ent data sizes. Table 6: Recognition performance in %WER using stage-2 retrain- ing and multilingual RNNLM Model type %WER on target languages Assamese Tagalog Swahili Lao Stage-2 retraining 71.9 71.4 66.2 62.4 + Multi. RNNLM 65.3 64.3 56.2 57.9 As explained already, language models were trained separately and used to decode jointly with seq2seq models. The intuition be- hind it is to use the separately trained language model as a com- plementary component that works with a implicit language model within a seq2seq decoder.",
  "The intuition be- hind it is to use the separately trained language model as a com- plementary component that works with a implicit language model within a seq2seq decoder. The way of RNNLM assisting decoding follows the equation below: log p(cl|c1:l\u22121, X) = log phyp(cl|c1:l\u22121, X) + \u03b2 log plm(cl|c1:l\u22121, X) (12) \u03b2 is a scaling factor that combines the scores from a joint decod- ing eq.(11) with RNN-LM, denoted as plm. This approach is called shallow fusion. Our experiments for target languages show that the gains from adding RNNLM are consistent regardless of the amount of data used for transfer learning. In other words, in Figure 3, the gap between two lines are almost consistent over all languages. Also, we observe the gain we get by adding RNN-LM in de- coding is large.",
  "In other words, in Figure 3, the gap between two lines are almost consistent over all languages. Also, we observe the gain we get by adding RNN-LM in de- coding is large. For example, in the case of assamese, the gain by RNN-LM in decoding with a model retrained on 5 hours of the tar- get language data is almost comparable with the model stage-2 re- trained with 20 hours of target language data. On average, absolute gain \u223c6% is obtained across all target languages as noted in table 6. 5. CONCLUSION In this work, we have shown the importance of transfer learning ap- proach such as stage-2 multilingual retraining in a seq2seq model setting. Also, careful selection of train and target languages from BABEL provide a wide variety in recognition performance (%CER) and helps in understanding the ef\ufb01cacy of seq2seq model. The ex- periments using character-based RNNLM showed the importance of language model in boosting recognition performance (%WER) over all different hours of target data available for transfer learning.",
  "The ex- periments using character-based RNNLM showed the importance of language model in boosting recognition performance (%WER) over all different hours of target data available for transfer learning. Table 5 and 6 summarizes, the effect of these techniques in terms of %CER and %WER. These methods also show their \ufb02exibility in incorporating it in attention and CTC based seq2seq model without compromising loss in performance. 6. FUTURE WORK We could use better architectures such as VGG-BLSTM as a multi- lingual prior model before transferring them to a new target language by performing stage-2 retraining. The naive multilingual approach can be improved by including language vectors as input or target dur- ing training to reduce the confusions. Also, investigation of multi- lingual bottleneck features [31] for seq2seq model can provide better performance. Apart from using the character level language model as in this work, a word level RNNLM can be connected during de- coding to further improve %WER. The attention based decoder can",
  "be aided with the help of RNNLM using cold fusion approach dur- ing training to attain a better-trained model. In near future, we will incorporate all the above techniques to get comparable performance with the state-of-the-art hybrid DNN/RNN-HMM systems. 7. REFERENCES [1] Ilya Sutskever, Oriol Vinyals, and Quoc V Le, \u201cSequence to sequence learning with neural networks,\u201d in Advances in neu- ral information processing systems, 2014, pp. 3104\u20133112. [2] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio, \u201cNeural machine translation by jointly learning to align and translate,\u201d arXiv preprint arXiv:1409.0473, 2014.",
  "3104\u20133112. [2] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio, \u201cNeural machine translation by jointly learning to align and translate,\u201d arXiv preprint arXiv:1409.0473, 2014. [3] Kyunghyun Cho, Bart Van Merri\u00a8enboer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi Bougares, Holger Schwenk, and Yoshua Bengio, \u201cLearning phrase representations using RNN encoder-decoder for statistical machine translation,\u201d arXiv preprint arXiv:1406.1078, 2014. [4] Jan K Chorowski, Dzmitry Bahdanau, Dmitriy Serdyuk, Kyunghyun Cho, and Yoshua Bengio, \u201cAttention-based mod- els for speech recognition,\u201d in Advances in neural information processing systems, 2015, pp. 577\u2013585. [5] Alex Graves and Navdeep Jaitly, \u201cTowards end-to-end speech recognition with recurrent neural networks.,\u201d in ICML, 2014, vol.",
  "577\u2013585. [5] Alex Graves and Navdeep Jaitly, \u201cTowards end-to-end speech recognition with recurrent neural networks.,\u201d in ICML, 2014, vol. 14, pp. 1764\u20131772. [6] Alex Graves, \u201cSupervised sequence labelling,\u201d in Supervised sequence labelling with recurrent neural networks, pp. 5\u201313. Springer, 2012. [7] William Chan, Navdeep Jaitly, Quoc Le, and Oriol Vinyals, \u201cListen, attend and spell: A neural network for large vocab- ulary conversational speech recognition,\u201d in IEEE Interna- tional Conference on Acoustics, Speech and Signal Processing (ICASSP). IEEE, 2016, pp. 4960\u20134964. [8] Andrew Rosenberg, Kartik Audhkhasi, Abhinav Sethy, Bhu- vana Ramabhadran, and Michael Picheny, \u201cEnd-to-end speech recognition and keyword search on low-resource languages,\u201d in IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). IEEE, 2017, pp.",
  "IEEE, 2017, pp. 5280\u20135284. [9] Laurent Besacier, Etienne Barnard, Alexey Karpov, and Tanja Schultz, \u201cAutomatic speech recognition for under-resourced languages: A survey,\u201d Speech Communication, vol. 56, pp. 85\u2013100, 2014. [10] Zoltan Tuske, David Nolden, Ralf Schluter, and Hermann Ney, \u201cMultilingual mrasta features for low-resource keyword search and speech recognition systems,\u201d in IEEE International Con- ference on Acoustics, Speech and Signal Processing (ICASSP), 2014, pp. 7854\u20137858. [11] Martin Kara\ufb01\u00b4at, Murali Karthick Baskar, Pavel Mat\u02c7ejka, Karel Vesel`y, Franti\u02c7sek Gr\u00b4ezl, and Jan \u02c7Cernocky, \u201cMultilingual blstm and speaker-speci\ufb01c vector adaptation in 2016 but ba- bel system,\u201d in Spoken Language Technology Workshop (SLT), 2016 IEEE. IEEE, 2016, pp. 637\u2013643.",
  "IEEE, 2016, pp. 637\u2013643. [12] Sibo Tong, Philip N Garner, and Herv\u00b4e Bourlard, \u201cMultilingual training and cross-lingual adaptation on CTC-based acoustic model,\u201d arXiv preprint arXiv:1711.10025, 2017. [13] Pawel Swietojanski and Steve Renals, \u201cLearning hidden unit contributions for unsupervised speaker adaptation of neural network acoustic models,\u201d in Spoken Language Technology Workshop (SLT), 2014 IEEE. IEEE, 2014, pp. 171\u2013176. [14] Markus M\u00a8uller, Sebastian St\u00a8uker, and Alex Waibel, \u201cLanguage adaptive multilingual CTC speech recognition,\u201d in Interna- tional Conference on Speech and Computer. Springer, 2017, pp. 473\u2013482. [15] Siddharth Dalmia, Ramon Sanabria, Florian Metze, and Alan W Black, \u201cSequence-based multi-lingual low resource speech recognition,\u201d arXiv preprint arXiv:1802.07420, 2018.",
  "473\u2013482. [15] Siddharth Dalmia, Ramon Sanabria, Florian Metze, and Alan W Black, \u201cSequence-based multi-lingual low resource speech recognition,\u201d arXiv preprint arXiv:1802.07420, 2018. [16] Shinji Watanabe, Takaaki Hori, and John R Hershey, \u201cLan- guage independent end-to-end architecture for joint language identi\ufb01cation and speech recognition,\u201d in Automatic Speech Recognition and Understanding Workshop (ASRU), 2017 IEEE. IEEE, 2017, pp. 265\u2013271. [17] Shubham Toshniwal, Tara N Sainath, Ron J Weiss, Bo Li, Pe- dro Moreno, Eugene Weinstein, and Kanishka Rao, \u201cMultilin- gual speech recognition with a single end-to-end model,\u201d in IEEE International Conference on Acoustics, Speech and Sig- nal Processing (ICASSP), 2018.",
  "[18] Shinji Watanabe, Takaaki Hori, Suyoun Kim, John R Hershey, and Tomoki Hayashi, \u201cHybrid CTC/attention architecture for end-to-end speech recognition,\u201d IEEE Journal of Selected Top- ics in Signal Processing, vol. 11, no. 8, pp. 1240\u20131253, 2017. [19] Matthias Sperber, Jan Niehues, Graham Neubig, Sebastian St \u02dcA\u0152ker, and Alex Waibel, \u201cSelf-attentional acoustic mod- els,\u201d in 19th Annual Conference of the International Speech Communication Association (InterSpeech 2018), 2018. [20] Chung-Cheng Chiu and Colin Raffel, \u201cMonotonic chunkwise attention,\u201d CoRR, vol. abs/1712.05382, 2017. [21] Karen Simonyan and Andrew Zisserman, \u201cVery deep convolu- tional networks for large-scale image recognition,\u201d 09 2014.",
  "abs/1712.05382, 2017. [21] Karen Simonyan and Andrew Zisserman, \u201cVery deep convolu- tional networks for large-scale image recognition,\u201d 09 2014. [22] Ying Zhang, Mohammad Pezeshki, Phil\u00b4emon Brakel, Saizheng Zhang, C\u00b4esar Laurent, Y Bengio, and Aaron Courville, \u201cTowards end-to-end speech recognition with deep convolutional neural networks,\u201d September 2016. [23] Jan Chorowski, Dzmitry Bahdanau, Dmitriy Serdyuk, Kyunghyun Cho, and Yoshua Bengio, \u201cAttention-based mod- els for speech recognition,\u201d in Advances in Neural Informa- tion Processing Systems. 2015, vol. 2015-January, pp. 577\u2013 585, Neural information processing systems foundation.",
  "2015, vol. 2015-January, pp. 577\u2013 585, Neural information processing systems foundation. [24] Takaaki Hori, Shinji Watanabe, Yu Zhang, and William Chan, \u201cAdvances in joint CTC-attention based end-to-end speech recognition with a deep cnn encoder and RNN-LM,\u201d arXiv preprint arXiv:1706.02737, 2017. [25] Daniel Povey, Arnab Ghoshal, Gilles Boulianne, Lukas Bur- get, Ondrej Glembek, Nagendra Goel, Mirko Hannemann, Petr Motlicek, Yanmin Qian, Petr Schwarz, et al., \u201cThe kaldi speech recognition toolkit,\u201d in Automatic Speech Recognition and Un- derstanding, 2011 IEEE Workshop on. IEEE, 2011, pp. 1\u20134. [26] Mike Schuster and Kuldip K Paliwal, \u201cBidirectional recurrent neural networks,\u201d IEEE Transactions on Signal Processing, vol. 45, no. 11, pp. 2673\u20132681, 1997.",
  "1\u20134. [26] Mike Schuster and Kuldip K Paliwal, \u201cBidirectional recurrent neural networks,\u201d IEEE Transactions on Signal Processing, vol. 45, no. 11, pp. 2673\u20132681, 1997. [27] Sepp Hochreiter and J\u00a8urgen Schmidhuber, \u201cLong short-term memory,\u201d Neural computation, vol. 9, no. 8, pp. 1735\u20131780, 1997. [28] Tomas Mikolov, Stefan Kombrink, Anoop Deoras, Lukar Bur- get, and Jan Cernocky, \u201cRNNLM-recurrent neural network language modeling toolkit,\u201d in Proc. of the 2011 ASRU Work- shop, 2011, pp. 196\u2013201.",
  "[29] Shinji Watanabe, Takaaki Hori, Shigeki Karita, Tomoki Hayashi, Jiro Nishitoba, Yuya Unno, Nelson Enrique Yalta So- plin, Jahn Heymann, Matthew Wiesner, Nanxin Chen, et al., \u201cEspnet: End-to-end speech processing toolkit,\u201d arXiv preprint arXiv:1804.00015, 2018. [30] Sibo Tong, Philip N Garner, and Herv\u00b4e Bourlard, \u201cAn investi- gation of deep neural networks for multilingual speech recog- nition training and adaptation,\u201d Tech. Rep., 2017. [31] Frantisek Gr\u00b4ezl, Martin Kara\ufb01\u00b4at, and Karel Vesel`y, \u201cAdapta- tion of multilingual stacked bottle-neck neural network struc- ture for new language,\u201d in IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). IEEE, 2014."
]