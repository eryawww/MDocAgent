{
  "config":{
    "query_token_id":"[unused0]",
    "doc_token_id":"[unused1]",
    "query_token":"[Q]",
    "doc_token":"[D]",
    "ncells":null,
    "centroid_score_threshold":null,
    "ndocs":null,
    "load_index_with_mmap":false,
    "index_path":null,
    "index_bsize":32,
    "nbits":4,
    "kmeans_niters":20,
    "resume":false,
    "pool_factor":1,
    "clustering_mode":"hierarchical",
    "protected_tokens":0,
    "similarity":"cosine",
    "bsize":64,
    "accumsteps":1,
    "lr":0.00001,
    "maxsteps":400000,
    "save_every":null,
    "warmup":20000,
    "warmup_bert":null,
    "relu":false,
    "nway":64,
    "use_ib_negatives":true,
    "reranker":false,
    "distillation_alpha":1.0,
    "ignore_scores":false,
    "model_name":null,
    "query_maxlen":32,
    "attend_to_mask_tokens":false,
    "interaction":"colbert",
    "dim":128,
    "doc_maxlen":256,
    "mask_punctuation":true,
    "checkpoint":"colbert-ir/colbertv2.0",
    "triples":"/future/u/okhattab/root/unit/experiments/2021.10/downstream.distillation.round2.2_score/round2.nway6.cosine.ib/examples.64.json",
    "collection":[
      "list with 123 elements starting with...",
      [
        "Boosting Question Answering by Deep Entity Recognition Piotr Przyby\u0142a\u22c6\u22c6 Institute of Computer Science, Polish Academy of Sciences, Warsaw, Poland, P.Przybyla@phd.ipipan.waw.pl Abstract. In this paper an open-domain factoid question answering system for Polish, RAFAEL, is presented. The system goes beyond \ufb01nding an answering sentence; it also ex- tracts a single string, corresponding to the required entity. Herein the focus is placed on di\ufb00erent approaches to entity recognition, essential for retrieving information matching ques- tion constraints. Apart from traditional approach, including named entity recognition (NER) solutions, a novel technique, called Deep Entity Recognition (DeepER), is introduced and implemented. It allows a comprehensive search of all forms of entity references matching a given WordNet synset (e.g. an impressionist), based on a previously assembled entity library. It has been created by analysing the \ufb01rst sentences of encyclopaedia entries and disambigua- tion and redirect pages.",
        "an impressionist), based on a previously assembled entity library. It has been created by analysing the \ufb01rst sentences of encyclopaedia entries and disambigua- tion and redirect pages. DeepER also provides automatic evaluation, which makes possible numerous experiments, including over a thousand questions from a quiz TV show answered on the grounds of Polish Wikipedia. The \ufb01nal results of a manual evaluation on a separate question set show that the strength of DeepER approach lies in its ability to answer questions that demand answers beyond the traditional categories of named entities. 1 Introduction A Question Answering (QA) system is a computer program capable of understanding questions in a natural language, \ufb01nding answers to them in a knowledge base and providing answers in the same language. So broadly de\ufb01ned task seems very hard; Shapiro (1992) describes it as AI-Complete, i.e. equivalent to building a general arti\ufb01cial intelligence. Nonetheless, the \ufb01eld has attracted a lot of attention in Natural Language Processing (NLP) community as it provides a way to employ numerous NLP tools in an exploitable end-user system.",
        "equivalent to building a general arti\ufb01cial intelligence. Nonetheless, the \ufb01eld has attracted a lot of attention in Natural Language Processing (NLP) community as it provides a way to employ numerous NLP tools in an exploitable end-user system. It has resulted in valuable contributions within TREC competitions (Dang et al., 2007) and, quite recently, in a system called IBM Watson (Ferrucci et al., 2010), successfully competing with humans in the task. However, the problem remains far from solved. Firstly, solutions designed for English are not always easily transferable to other languages with more complex syntax rules and less resources available, such as Slavonic. Secondly, vast complexity and formidable hardware requirements of IBM Watson suggest that there is still a room for improvements, making QA systems smaller and smarter. This work attempts to contribute in both of the above areas. It introduces RAFAEL (RApid Factoid Answer Extraction aLgorithm), a complete QA system for Polish language."
      ]
    ],
    "queries":"/future/u/okhattab/data/MSMARCO/queries.train.tsv",
    "index_name":"PaperTab-question-1605.08675.pdf",
    "overwrite":false,
    "root":".ragatouille/",
    "experiment":"colbert",
    "index_root":null,
    "name":"2025-05/17/10.22.50",
    "rank":0,
    "nranks":1,
    "amp":true,
    "gpus":1,
    "avoid_fork_if_possible":false
  },
  "num_chunks":1,
  "num_partitions":2048,
  "num_embeddings":20248,
  "avg_doclen":164.6178861789,
  "RAGatouille":{
    "index_config":{
      "index_type":"PLAID",
      "index_name":"PaperTab-question-1605.08675.pdf"
    }
  }
}