{
    "config": {
        "query_token_id": "[unused0]",
        "doc_token_id": "[unused1]",
        "query_token": "[Q]",
        "doc_token": "[D]",
        "ncells": null,
        "centroid_score_threshold": null,
        "ndocs": null,
        "load_index_with_mmap": false,
        "index_path": null,
        "index_bsize": 32,
        "nbits": 4,
        "kmeans_niters": 20,
        "resume": false,
        "pool_factor": 1,
        "clustering_mode": "hierarchical",
        "protected_tokens": 0,
        "similarity": "cosine",
        "bsize": 64,
        "accumsteps": 1,
        "lr": 1e-5,
        "maxsteps": 400000,
        "save_every": null,
        "warmup": 20000,
        "warmup_bert": null,
        "relu": false,
        "nway": 64,
        "use_ib_negatives": true,
        "reranker": false,
        "distillation_alpha": 1.0,
        "ignore_scores": false,
        "model_name": null,
        "query_maxlen": 32,
        "attend_to_mask_tokens": false,
        "interaction": "colbert",
        "dim": 128,
        "doc_maxlen": 256,
        "mask_punctuation": true,
        "checkpoint": "colbert-ir\/colbertv2.0",
        "triples": "\/future\/u\/okhattab\/root\/unit\/experiments\/2021.10\/downstream.distillation.round2.2_score\/round2.nway6.cosine.ib\/examples.64.json",
        "collection": [
            "Representation Learning for Discovering Phonemic Tone Contours Bai Li1,2, Jing Yi Xie1, Frank Rudzicz1,2,3 1 University of Toronto, Toronto, Canada 2 Vector Institute, Toronto, Canada 3 St Michael\u2019s Hospital, Toronto, Canada {bai, frank}@cs.toronto.edu, jingyi.xie@mail.utoronto.ca Abstract Tone is a prosodic feature used to distinguish words in many languages, some of which are endangered and scarcely documented. In this work, we use unsupervised representa- tion learning to identify probable clusters of syllables that share the same phonemic tone. Our method extracts the pitch for each sylla- ble, then trains a convolutional autoencoder to learn a low-dimensional representation for each contour. We then apply the mean shift algorithm to cluster tones in high-density re- gions of the latent space. Furthermore, by feed- ing the centers of each cluster into the decoder, we produce a prototypical contour that repre- sents each cluster. We apply this method to spoken multi-syllable words in Mandarin Chi- nese and Cantonese and evaluate how closely our clusters match the ground truth tone cat- egories.",
            "We apply this method to spoken multi-syllable words in Mandarin Chi- nese and Cantonese and evaluate how closely our clusters match the ground truth tone cat- egories. Finally, we discuss some dif\ufb01culties with our approach, including contextual tone variation and allophony effects. 1 Introduction Tonal languages use pitch to distinguish different words, for example, yi in Mandarin may mean \u2018one\u2019, \u2018to move\u2019, \u2018already\u2019, or \u2018art\u2019, depending on the pitch contour. Of over 6000 languages in the world, it is estimated that as many as 60-70% are tonal (Lewis, 2009; Yip, 2002). A few of these are national languages (e.g., Mandarin Chinese, Viet- namese, and Thai), but many tonal languages have a small number of speakers and are scarcely docu- mented. There is a limited availability of trained lin- guists to perform language documentation before these languages become extinct, hence the need for better tools to assist linguists in these tasks.",
            "There is a limited availability of trained lin- guists to perform language documentation before these languages become extinct, hence the need for better tools to assist linguists in these tasks. One of the \ufb01rst tasks during the description of an unfamiliar language is determining its phonemic inventory: what are the consonants, vowels, and tones of the language, and which pairs of phonemes Figure 1: Fundamental frequency (F0) contours for the four Mandarin tones and six Cantonese tones in isola- tion, produced by native speakers. Figure adapted from (Francis et al., 2008). are contrastive? Tone presents a unique challenge because unlike consonants and vowels, which can be identi\ufb01ed in isolation, tones do not have a \ufb01xed pitch, and vary by speaker and situation. Since tone data is subject to interpretation, different lin- guists may produce different descriptions of the tone system of the same language (Yip, 2002). In this work, we present a model to automatically infer phonemic tone categories of a tonal language.",
            "Since tone data is subject to interpretation, different lin- guists may produce different descriptions of the tone system of the same language (Yip, 2002). In this work, we present a model to automatically infer phonemic tone categories of a tonal language. We use an unsupervised learning approach: a con- volutional autoencoder learns a low-dimensional representation of each tone using only a set of spoken syllables in the target language. This is followed by mean shift clustering to identify clus- ters of syllables that probably have the same tone. We apply our method on Mandarin Chinese and Cantonese datasets, for which the ground truth an- notation is used for evaluation. Our method does not make any language-speci\ufb01c assumptions, so it may be applied to low-resource languages whose phonemic inventories are not already established. 1.1 Tone in Mandarin and Cantonese Mandarin Chinese (1.1 billion speakers) and Can- tonese (74 million speakers) are two tonal lan- arXiv:1910.08987v2  [cs.SD]  14 May 2020",
            "PCA Mean-shift Clustering Conv MaxPool Conv MaxPool Linear Deconv Deconv Linear Input pitch contour (40 dimensions) Output pitch contour (40 dimensions) Hidden (2 dimensions) 2x20 4x10 1x40 2x20 Figure 2: Diagram of our model architecture, consisting of a convolutional autoencoder to learn a latent represen- tation for each pitch contour, and mean shift clustering to identify groups of similar tones. guages in the Sinitic family (Lewis, 2009). Man- darin has four lexical tones: high (55), rising (25), low-dipping (214), and falling (51)1. The third tone sometimes undergoes sandhi, addressed in section 3. We exclude a \ufb01fth, neutral tone, which can only occur in word-\ufb01nal positions and has no \ufb01xed pitch. Cantonese has six lexical tones: high-level (55), mid-rising (25), mid-level (33), low-falling (21), low-rising (23), and low-level (22).",
            "Cantonese has six lexical tones: high-level (55), mid-rising (25), mid-level (33), low-falling (21), low-rising (23), and low-level (22). Some descrip- tions of Cantonese include nine tones, of which three are checked tones that are \ufb02at, shorter in du- ration, and only occur on syllables ending in \/p\/, \/t\/, or \/k\/. Since each one of the checked tones are in complementary distribution with an unchecked tone, we adopt the simpler six tone model that treats the checked tones as variants of the high, mid, and low level tones. Contours for the lexical tones in both languages are shown in Figure 1. 2 Related work Many low-resource languages lack suf\ufb01cient tran- scribed data for supervised speech processing, thus unsupervised models for speech processing is an emerging area of research. The Zerospeech 2015 and 2017 challenges featured unsupervised learn- ing of contrasting phonemes in English and Xit- songa, evaluated by an ABX phoneme discrimina- tion task (Versteegh et al., 2015).",
            "The Zerospeech 2015 and 2017 challenges featured unsupervised learn- ing of contrasting phonemes in English and Xit- songa, evaluated by an ABX phoneme discrimina- tion task (Versteegh et al., 2015). One successful approach used denoising and correspondence au- toencoders to learn a representation that avoided capturing noise and irrelevant inter-speaker varia- tion (Renshaw et al., 2015). Deep LSTMs for seg- menting and clustering phonemes in speech have also been explored in (M\u00a8uller et al., 2017b) and (M\u00a8uller et al., 2017a). In Mandarin Chinese, deep neural networks have been successful for tone classi\ufb01cation in isolated 1The numbers are Chao tone numerals, where 1 is the lowest and 5 is the highest pitch. syllables (Chen et al., 2016) as well as in con- tinuous speech (Ryant et al., 2014b,a).",
            "syllables (Chen et al., 2016) as well as in con- tinuous speech (Ryant et al., 2014b,a). Both of these models found that Mel-frequency cepstral coef\ufb01cients (MFCCs) outperformed pitch contour features, despite the fact that MFCC features do not contain pitch information. In Cantonese, sup- port vector machines (SVMs) have been applied to classify tones in continuous speech, using pitch contours as input (Peng and Wang, 2005). Unsupervised learning of tones remains largely unexplored. Levow (2006) performed unsuper- vised and semi-supervised tone clustering in Man- darin, using average pitch and slope as features, and k-means and asymmetric k-lines for cluster- ing. Graph-based community detection techniques have been applied to group n-grams of contiguous contours into clusters in Mandarin (Zhang, 2019).",
            "Graph-based community detection techniques have been applied to group n-grams of contiguous contours into clusters in Mandarin (Zhang, 2019). In recent work concurrent to ours, Fry (2020) uses adversarial autoencoders and hierarchical cluster- ing to identify tone inventories, and evaluate their method on Mandarin, Cantonese, Fungwa, and En- glish data. We further explore unsupervised deep neural net- works for phonemic tone clustering. It should be noted that our unsupervised model is not given tone labels during training, and the number of tones is assumed to be unknown, so it cannot be directly compared to supervised tone classi\ufb01ers in the liter- ature. 3 Data and preprocessing We use data from Mandarin Chinese and Cantonese. For each language, the data consists of a list of spo- ken words, recorded by the same speaker. The Mandarin dataset is from a female speaker and is provided by Shtooka2, and the Cantonese dataset is from a male speaker and is downloaded from 2http:\/\/shtooka.net\/, speci\ufb01cally the cmn-caen- tan dataset.",
            "Forvo3, an online crowd-sourced pronunciation dictionary. We require all samples within each language to be from the same speaker to avoid the dif\ufb01culties associated with channel effects and inter-speaker variation. We randomly sample 400 words from each language, which are mostly be- tween 2 and 4 syllables; to reduce the prosody effects with longer utterances, we exclude words longer than 4 syllables. We extract ground-truth tones for evaluation pur- poses. In Mandarin, the tones are extracted from the pinyin transcription; in Cantonese, we reference the character entries on Wiktionary4 to retrieve the romanized pronunciation and tones. For Mandarin, we adjust for third-tone sandhi (a phonological rule where a pair of consecutive third-tones is always realized as a second-tone followed by a third-tone), and use the sandhi tone as the ground truth. We also exclude the neutral tone, which has no \ufb01xed pitch and is sometimes thought of as a lack of tone.",
            "We also exclude the neutral tone, which has no \ufb01xed pitch and is sometimes thought of as a lack of tone. 3.1 Pitch extraction and syllable segmentation We use Praat\u2019s autocorrelation-based pitch estima- tion algorithm to extract the fundamental frequency (F0) contour for each sample, using a minimum frequency of 75Hz and a maximum frequency of 500Hz (Boersma, 1993). The interface between Python and Praat is handled using Parselmouth (Jadoul et al., 2018). We normalize the contour to be between 0 and 1, based on the speaker\u2019s pitch range. Next, we manually segment each speech sample into syllables, necessary because syllable bound- aries are not provided in our datasets. We sample the pitch at 40 equally spaced points, obtaining a constant length vector as input to our model. Note that by sampling a variable length contour to a con- stant length, the model does not have information about syllable length; we discuss this design choice in section 6.2.",
            "We sample the pitch at 40 equally spaced points, obtaining a constant length vector as input to our model. Note that by sampling a variable length contour to a con- stant length, the model does not have information about syllable length; we discuss this design choice in section 6.2. 4 Model 4.1 Convolutional autoencoder We use a convolutional autoencoder (Figure 2) to learn a two-dimensional latent vector for each syl- lable. Convolutional layers are widely used in com- puter vision and speech processing to learn spa- tially local features that are invariant of position. 3https:\/\/forvo.com\/ 4https:\/\/en.wiktionary.org\/ 0 1 2 3 4 5 6 7 8 9 10 Cluster number 0 10 20 30 % of total Mandarin (4 clusters) 0 1 2 3 4 5 6 7 8 9 10 11 Cluster number 0 10 20 30 40 % of total Cantonese (5 clusters) Figure 3: Clusters generated by the mean shift proce- dure.",
            "The black line shows the threshold: we discard clusters with size below this value and treat their points as unclustered. We use a low dimensional latent space so that the model learns to generate a representation that only captures the most important aspects of the input contour, and also because clustering algorithms tend to perform poorly in high dimensional spaces. Our encoder consists of three layers. The \ufb01rst layer applies 2 convolutional \ufb01lters (kernel size 4, stride 1) followed by max pooling (kernel size 2) and a tanh activation. The second layer applies 4 convolutional \ufb01lters (kernel size 4, stride 1), again with max pooling (kernel size 2) and a tanh activa- tion. The third layer is a fully connected layer with two dimensional output. Our decoder is the en- coder in reverse, consisting of one fully connected layer and two deconvolution layers, with the same layer shapes as the encoder. We train the autoencoder using PyTorch (Paszke et al., 2017), for 500 epochs, with a batch size of 60.",
            "We train the autoencoder using PyTorch (Paszke et al., 2017), for 500 epochs, with a batch size of 60. The model is optimized using Adam (Kingma and Ba, 2015) with a learning rate of 5e-4 to mini- mize the mean squared error between the input and output contours. 4.2 Mean shift clustering We run the encoder on each syllable\u2019s pitch con- tour to get their latent representations; we apply principal component analysis (PCA) to remove any correlation between the two dimensions. Then, we run mean shift clustering (Comaniciu and Meer, 2002; Ghassabeh and Rudzicz, 2018), estimating",
            "Cluster A        Cluster B         Cluster C        Cluster D Cluster A         Cluster B        Cluster C        Cluster D         Cluster E Mandarin Cantonese B A C D A B E C D PC1 PC2 PC1 PC2 Figure 4: Latent space generated by autoencoder and the results of mean shift clustering for Mandarin and Can- tonese. Each cluster center is fed through the decoder to generate the corresponding pitch contour. The clusters within each language are ordered by size, from largest to smallest. a probability density function in the latent space. The procedure performs gradient ascent on all the points until they converge to a set of stationary points, which are local maxima of the density func- tion. These stationary points are taken to be cluster centers, and points that converge to the same sta- tionary point belong to the same cluster. We feed the cluster centers into the decoder to generate a prototype pitch contour for each cluster. Unlike k-means clustering, the mean shift pro- cedure does not require the number of clusters to be speci\ufb01ed, only a bandwidth parameter (set to 0.6 for our experiments).",
            "We feed the cluster centers into the decoder to generate a prototype pitch contour for each cluster. Unlike k-means clustering, the mean shift pro- cedure does not require the number of clusters to be speci\ufb01ed, only a bandwidth parameter (set to 0.6 for our experiments). The cluster centers are always in regions of high density, so they can be viewed as prototypes that represent their respective clusters. Another advantage is that unlike k-means, mean shift clustering is robust to outliers. 4.3 Selecting bandwidth and threshold The bandwidth parameter controls the size of the clusters: a higher bandwidth value generates fewer and larger clusters. We tune the bandwidth parame- ter to produce linguistically plausible tone clusters: we expect between 3 to 8 different clusters, each clusters should have at least 1\/10 of the points be assigned to it, and most points should belong to some cluster. The mean shift procedure assigns every point to some cluster, even if the resulting cluster contains only a few points. Thus, we set a threshold: we treat clusters smaller than the threshold as spurious, and leave their points as unclustered. Figure 3 shows the effect of the threshold on both languages.",
            "Thus, we set a threshold: we treat clusters smaller than the threshold as spurious, and leave their points as unclustered. Figure 3 shows the effect of the threshold on both languages. 4.4 k-means baseline We implement a simple k-means baseline similar to Levow (2006), using two engineered features. The \ufb01rst feature is the average pitch of all the points in the pitch contour; the second feature is the slope of an ordinary least squares regression \ufb01t on the pitch contour. After extracting these features for every syllable, we run k-means clustering, using the same number of clusters that is chosen by the mean shift algorithm. 5 Results Figure 4 shows the latent space learned by the au- toencoders and the clustering output. Our model found 4 tone clusters in Mandarin, matching the number of phonemic tones (Table 1) and 5 in Can- tonese, which is one fewer than the number of phonemic tones (Table 2). In Mandarin, the 4 clus- ters correspond very well with the the 4 phonemic tone categories, and the generated contours closely match the ground truth in Figure 1.",
            "In Mandarin, the 4 clus- ters correspond very well with the the 4 phonemic tone categories, and the generated contours closely match the ground truth in Figure 1. There is some overlap between tones 3 and 4; this is because tone 3 is sometimes realized a low-falling tone without the \ufb01nal rise, a process known as half T3 sandhi",
            "Cluster T1 T2 T3 T4 A 1 163 12 4 B 108 0 0 1 C 0 5 53 31 D 1 0 0 97 N\/A 47 30 53 129 Table 1: Cluster and tone frequencies for Mandarin. Cluster T1 T2 T3 T4 T5 T6 A 5 5 59 109 7 105 B 102 3 36 2 2 7 C 93 0 0 2 0 0 D 0 64 4 3 2 11 E 0 28 2 4 30 2 N\/A 70 39 51 45 15 49 Table 2: Cluster and tone frequencies for Cantonese. (Chen, 2000), thus, it may overlap with tone 4 (falling tone). In Cantonese, the 5 clusters A-E correspond to low-falling, mid-level, high-level, mid-rising, and low-rising tones.",
            "(Chen, 2000), thus, it may overlap with tone 4 (falling tone). In Cantonese, the 5 clusters A-E correspond to low-falling, mid-level, high-level, mid-rising, and low-rising tones. Tone clustering in Cantonese is expected to be more dif\ufb01cult than in Mandarin be- cause of 6 contrastive tones, rather than 4. The model is more effective at clustering the higher tones (1, 2, 3), and less effective at clustering the lower tones (4, 5, 6), particularly tone 4 (low- falling) and tone 6 (low-level). This con\ufb01rms the dif\ufb01culties in prior work, which reported worse classi\ufb01cation accuracy on the lower-pitched tones because the lower region of the Cantonese tone space is more crowded than the upper region (Peng and Wang, 2005). To evaluate how much the clusters match the ground truth, we use normalized mutual informa- tion (NMI); this is preferable over accuracy because it does not require the number of detected clusters to be the same as the number of tones.",
            "To evaluate how much the clusters match the ground truth, we use normalized mutual informa- tion (NMI); this is preferable over accuracy because it does not require the number of detected clusters to be the same as the number of tones. In Table 3, we evaluate NMI for our autoencoder model and the k-means baseline. We consider two scenarios for each language: using all the syllables (All) and using only the \ufb01rst syllable of each word (First). In all cases, the clusters from the autoencoder model have higher NMI than the k-means model. The improvement is due to the mean shift proce- dure identifying points that belong to a cluster with high con\ufb01dence: it only only makes predictions for those points, whereas k-means assigns every point to a cluster.",
            "The improvement is due to the mean shift proce- dure identifying points that belong to a cluster with high con\ufb01dence: it only only makes predictions for those points, whereas k-means assigns every point to a cluster. All models perform better on the Autoencoder k-means Mandarin (First) 0.846 0.829 Mandarin (All) 0.753 0.645 Cantonese (First) 0.575 0.493 Cantonese (All) 0.463 0.377 Table 3: Normalized mutual information (NMI) be- tween cluster assignments and ground truth tones, con- sidering only the \ufb01rst syllable of each word, or all syl- lables. \ufb01rst syllable of each utterance than the rest of the syllables; we discuss the reasons for this in the next section. 6 Limitations 6.1 Contextual effects One limitation of our model is it considers sylla- bles in isolation, but in reality, pitch is affected by context. Two types of contextual effects are carry- over and declination.",
            "6 Limitations 6.1 Contextual effects One limitation of our model is it considers sylla- bles in isolation, but in reality, pitch is affected by context. Two types of contextual effects are carry- over and declination. A carry-over effect is when the pitch contour of a tone undergoes contextual variation depending on the preceding tone; strong carry-over effects have been observed in Mandarin (Xu, 1997). Prior work (Levow, 2006) avoided carry-over effects by using only the second half of every syllable, but we do not consider language- speci\ufb01c heuristics in our model. Declination is a phenomenon in which the pitch declines over an utterance (Yip, 2002; Peng and Wang, 2005). This is especially a problem in Can- tonese, which has tones that differ only on pitch level and not contour: for example, a mid-level tone near the end of a phrase may have the same absolute pitch as a low-level tone at the start of a phrase. Contextual effects are apparent in our results (Table 3).",
            "Contextual effects are apparent in our results (Table 3). In both Mandarin and Cantonese, the clustering is more accurate when using only the \ufb01rst syllable (which is not affected by carry-over or declination), compared to using all the syllables. 6.2 Minimal pairs and allotones Tone is not a purely phonetic property: it is impos- sible to determine, from phonetics alone, whether two pitch contours have the same or different tones. The same underlying tone may manifest as sev- eral different allotones depending on the phonetic context. An example of this appears in Cantonese. Its tone system is sometimes analyzed as having nine",
            "tones instead of six, where six of the tones are only permitted in open syllables (e.g. si) and three are only permitted in checked syllables (e.g. sik). Other analyses use a six-tone system, treating the three checked tones as allotonic variants of the high, mid, and low tones. By taking this approach, one implies that length is a property of the syllable and cannot be solely responsible for contrasting two tones. Length is not the only differentiating factor for allotones. Another example is in Wu Chinese, where syllables beginning with voiced consonants have lower pitch than those beginning with voice- less consonants (Yip, 2002). Thus the same lan- guage may have vastly different numbers of tones, depending on the analysis. Linguistically, two phonemic tones are consid- ered to be contrastive if there exists a minimal pair: two semantically different lexical items that are identical in every aspect except for tone. This def- inition is the most widely used because it clearly settles disagreements about whether two tones are same or different.",
            "This def- inition is the most widely used because it clearly settles disagreements about whether two tones are same or different. However, it is problematic for unsupervised models that only have access to pho- netic and not semantic information. This issue is not unique to tone: similar dif\ufb01culties have been noted when attempting to identify consonant and vowel phonemes automatically (Kempton and Moore, 2014). 7 Conclusion We propose a model for unsupervised clustering and discovery of phonemic tones in tonal lan- guages, using spoken words as input. Our model extracts the F0 pitch contour, trains a convolutional autoencoder to learn a low-dimensional represen- tation for each contour, and applies mean shift clustering to the resulting latent space. We obtain promising results with both Mandarin Chinese and Cantonese, using only 400 spoken words from each language. Cantonese presents more dif\ufb01culties be- cause of its larger number of tones, especially at the lower half of the pitch range, and also due to multiple contrastive level tones.",
            "We obtain promising results with both Mandarin Chinese and Cantonese, using only 400 spoken words from each language. Cantonese presents more dif\ufb01culties be- cause of its larger number of tones, especially at the lower half of the pitch range, and also due to multiple contrastive level tones. Still, in both our languages, our method \ufb01nds clusters of tones that better match the ground truth than the k-means baseline. Finally, we discuss the effects of contex- tual variation and the limitations of unsupervised learning for the tone induction problem. 8 Acknowledgments We thank Prof Gerald Penn for his help suggestions during this project. Rudzicz is a CIFAR Chair in AI. References Paul Boersma. 1993. Accurate short-term analysis of the fundamental frequency and the harmonics-to- noise ratio of a sampled sound. In Proceedings of the institute of phonetic sciences, volume 17, pages 97\u2013110. Amsterdam. Charles Chen, Razvan C Bunescu, Li Xu, and Chang Liu. 2016. Tone classi\ufb01cation in Mandarin Chinese using convolutional neural networks.",
            "In Proceedings of the institute of phonetic sciences, volume 17, pages 97\u2013110. Amsterdam. Charles Chen, Razvan C Bunescu, Li Xu, and Chang Liu. 2016. Tone classi\ufb01cation in Mandarin Chinese using convolutional neural networks. In INTER- SPEECH, pages 2150\u20132154. Matthew Y Chen. 2000. Tone sandhi: Patterns across Chinese dialects, volume 92. Cambridge University Press. Dorin Comaniciu and Peter Meer. 2002. Mean shift: A robust approach toward feature space analysis. IEEE Transactions on Pattern Analysis & Machine Intelligence, (5):603\u2013619. Alexander L Francis, Valter Ciocca, Lian Ma, and Kim- berly Fenn. 2008. Perceptual learning of Cantonese lexical tones by tone and non-tone language speak- ers. Journal of Phonetics, 36(2):268\u2013294. Michael David Fry. 2020. Grammaticus ex machina: tone inventories as hypothesized by machine. Ph.D. thesis, University of British Columbia.",
            "Journal of Phonetics, 36(2):268\u2013294. Michael David Fry. 2020. Grammaticus ex machina: tone inventories as hypothesized by machine. Ph.D. thesis, University of British Columbia. Y Aliyari Ghassabeh and F Rudzicz. 2018. Modi- \ufb01ed mean shift algorithm. IET Image Processing, 12(12):2172\u20132177. Yannick Jadoul, Bill Thompson, and Bart De Boer. 2018. Introducing Parselmouth: A Python interface to Praat. Journal of Phonetics, 71:1\u201315. Timothy Kempton and Roger K Moore. 2014. Dis- covering the phoneme inventory of an unwritten lan- guage: A machine-assisted approach. Speech Com- munication, 56:152\u2013166. Diederik P Kingma and Jimmy Ba. 2015. Adam: A method for stochastic optimization. ICLR. Gina-Anne Levow. 2006. Unsupervised and semi- supervised learning of tone and pitch accent.",
            "Diederik P Kingma and Jimmy Ba. 2015. Adam: A method for stochastic optimization. ICLR. Gina-Anne Levow. 2006. Unsupervised and semi- supervised learning of tone and pitch accent. In Proceedings of the main conference on Human Lan- guage Technology Conference of the North Amer- ican Chapter of the Association of Computational Linguistics, pages 224\u2013231. Association for Compu- tational Linguistics. M. Paul Lewis. 2009. Ethnologue: Languages of the World, 16th edition. SIL International, Dallas, Texas.",
            "Markus M\u00a8uller, J\u00a8org Franke, Sebastian St\u00a8uker, and Alex Waibel. 2017a. Improving phoneme set discov- ery for documenting unwritten languages. Elektron- ische Sprachsignalverarbeitung (ESSV), 2017. Markus M\u00a8uller, J\u00a8org Franke, Alex Waibel, and Sebas- tian St\u00a8uker. 2017b. Towards phoneme inventory dis- covery for documentation of unwritten languages. In 2017 IEEE International Conference on Acous- tics, Speech and Signal Processing (ICASSP), pages 5200\u20135204. IEEE. Adam Paszke, Sam Gross, Soumith Chintala, Gregory Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Alban Desmaison, Luca Antiga, and Adam Lerer. 2017. Automatic differentiation in PyTorch. In NIPS Autodiff Workshop. Gang Peng and William S-Y Wang. 2005. Tone recog- nition of continuous Cantonese speech based on support vector machines.",
            "2017. Automatic differentiation in PyTorch. In NIPS Autodiff Workshop. Gang Peng and William S-Y Wang. 2005. Tone recog- nition of continuous Cantonese speech based on support vector machines. Speech Communication, 45(1):49\u201362. Daniel Renshaw, Herman Kamper, Aren Jansen, and Sharon Goldwater. 2015. A comparison of neu- ral network methods for unsupervised representa- tion learning on the zero resource speech challenge. In Sixteenth Annual Conference of the International Speech Communication Association. Neville Ryant, Malcolm Slaney, Mark Liberman, Eliz- abeth Shriberg, and Jiahong Yuan. 2014a. Highly accurate Mandarin tone classi\ufb01cation in the absence of pitch information. In Proceedings of Speech Prosody, volume 7. Neville Ryant, Jiahong Yuan, and Mark Liberman. 2014b. Mandarin tone classi\ufb01cation without pitch tracking.",
            "In Proceedings of Speech Prosody, volume 7. Neville Ryant, Jiahong Yuan, and Mark Liberman. 2014b. Mandarin tone classi\ufb01cation without pitch tracking. In 2014 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 4868\u20134872. IEEE. Maarten Versteegh, Roland Thiolliere, Thomas Schatz, Xuan Nga Cao, Xavier Anguera, Aren Jansen, and Emmanuel Dupoux. 2015. The zero resource speech challenge 2015. In Sixteenth Annual Conference of the International Speech Communication Associ- ation. Yi Xu. 1997. Contextual tonal variations in Mandarin. Journal of phonetics, 25(1):61\u201383. Moira Yip. 2002. Tone. Cambridge University Press. Shuo Zhang. 2019. Data mining Mandarin tone con- tour shapes. SIGMORPHON 2019, page 144."
        ],
        "queries": "\/future\/u\/okhattab\/data\/MSMARCO\/queries.train.tsv",
        "index_name": "PaperTab-question-1910.08987.pdf",
        "overwrite": false,
        "root": ".ragatouille\/",
        "experiment": "colbert",
        "index_root": null,
        "name": "2025-05\/17\/10.22.50",
        "rank": 0,
        "nranks": 1,
        "amp": true,
        "gpus": 1,
        "avoid_fork_if_possible": false
    },
    "num_chunks": 1,
    "num_partitions": 1024,
    "num_embeddings_est": 5959.000076293945,
    "avg_doclen_est": 180.5757598876953
}
