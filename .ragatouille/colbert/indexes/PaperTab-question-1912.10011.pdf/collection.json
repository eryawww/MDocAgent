[
  "A Hierarchical Model for Data-to-Text Generation Cl\u00b4ement Rebu\ufb00el1,2, Laure Soulier1, Geo\ufb00rey Scoutheeten2, and Patrick Gallinari1,3 1 LIP6, Sorbonne Universit\u00b4e, France 2 BNP Paribas, France 3 Criteo AI Lab, Paris firstname.lastname@{lip6.fr,bnpparibas.com} Abstract. Transcribing structured data into natural language descrip- tions has emerged as a challenging task, referred to as \u201cdata-to-text\u201d. These structures generally regroup multiple elements, as well as their attributes. Most attempts rely on translation encoder-decoder methods which linearize elements into a sequence. This however loses most of the structure contained in the data. In this work, we propose to overpass this limitation with a hierarchical model that encodes the data-structure at the element-level and the structure level. Evaluations on RotoWire show the e\ufb00ectiveness of our model w.r.t. qualitative and quantitative metrics.",
  "In this work, we propose to overpass this limitation with a hierarchical model that encodes the data-structure at the element-level and the structure level. Evaluations on RotoWire show the e\ufb00ectiveness of our model w.r.t. qualitative and quantitative metrics. Keywords: Data-to-text \u00b7 Hierarchical encoding \u00b7 Language Generation 1 Introduction Knowledge and/or data is often modeled in a structure, such as indexes, tables, key-value pairs, or triplets. These data, by their nature (e.g., raw data or long time-series data), are not easily usable by humans; outlining their crucial need to be synthesized. Recently, numerous works have focused on leveraging structured data in various applications, such as question answering [24,34] or table retrieval [7,32]. One emerging research \ufb01eld consists in transcribing data-structures into natural language in order to ease their understandablity and their usablity.",
  "Recently, numerous works have focused on leveraging structured data in various applications, such as question answering [24,34] or table retrieval [7,32]. One emerging research \ufb01eld consists in transcribing data-structures into natural language in order to ease their understandablity and their usablity. This \ufb01eld is referred to as \u201cdata-to-text\u201d [8] and has its place in several application domains (such as journalism [22] or medical diagnosis [25]) or wide-audience ap- plications (such as \ufb01nancial [26] and weather reports [30], or sport broadcasting [4,39]). As an example, Figure 1 shows a data-structure containing statistics on NBA basketball games, paired with its corresponding journalistic description. Designing data-to-text models gives rise to two main challenges: 1) under- standing structured data and 2) generating associated descriptions. Recent data- to-text models [18,28,29,39] mostly rely on an encoder-decoder architecture [2] in which the data-structure is \ufb01rst encoded sequentially into a \ufb01xed-size vecto- rial representation by an encoder.",
  "Recent data- to-text models [18,28,29,39] mostly rely on an encoder-decoder architecture [2] in which the data-structure is \ufb01rst encoded sequentially into a \ufb01xed-size vecto- rial representation by an encoder. Then, a decoder generates words conditioned on this representation. With the introduction of the attention mechanism [19] on one hand, which computes a context focused on important elements from the input at each decoding step and, on the other hand, the copy mechanism arXiv:1912.10011v1  [cs.CL]  20 Dec 2019",
  "2 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari Fig. 1: Example of structured data from the RotoWire dataset. Rows are entities (either a team or a player) and each cell a record, its key being the column label and its value the cell content. Factual mentions from the table are boldfaced in the description. [11,33] to deal with unknown or rare words, these systems produce \ufb02uent and domain comprehensive texts. For instance, Roberti et al. [31] train a character- wise encoder-decoder to generate descriptions of restaurants based on their at- tributes, while Puduppully et al. [28] design a more complex two-step decoder: they \ufb01rst generate a plan of elements to be mentioned, and then condition text generation on this plan. Although previous work yield overall good results, we identify two important caveats, that hinder precision (i.e. factual mentions) in the descriptions: 1. Linearization of the data-structure.",
  "Although previous work yield overall good results, we identify two important caveats, that hinder precision (i.e. factual mentions) in the descriptions: 1. Linearization of the data-structure. In practice, most works focus on intro- ducing innovating decoding modules, and still represent data as a unique sequence of elements to be encoded. For example, the table from Figure 1 would be linearized to [(Hawks, H/V, H), ..., (Magic, H/V, V), ...], e\ufb00ectively leading to losing distinction between rows, and therefore entities. To the best of our knowledge, only Liu et al. [17,18] propose encoders constrained by the structure but these approaches are designed for single-entity structures. 2. Arbitrary ordering of unordered collections in recurrent networks (RNN). Most data-to-text systems use RNNs as encoders (such as GRUs or LSTMs), these architectures have however some limitations. Indeed, they require in practice their input to be fed sequentially. This way of encoding unordered sequences (i.e.",
  "Most data-to-text systems use RNNs as encoders (such as GRUs or LSTMs), these architectures have however some limitations. Indeed, they require in practice their input to be fed sequentially. This way of encoding unordered sequences (i.e. collections of entities) implicitly assumes an arbitrary order within the collection which, as demonstrated by Vinyals et al. [37], signi\ufb01- cantly impacts the learning performance. To address these shortcomings, we propose a new structured-data encoder assuming that structures should be hierarchically captured. Our contribution focuses on the encoding of the data-structure, thus the decoder is chosen to be a classical module as used in [28,39]. Our contribution is threefold: \u2013 We model the general structure of the data using a two-level architecture, \ufb01rst encoding all entities on the basis of their elements, then encoding the data structure on the basis of its entities; \u2013 We introduce the Transformer encoder [36] in data-to-text models to ensure robust encoding of each element/entities in comparison to all others, no matter their initial positioning; \u2013 We integrate a hierarchical attention mechanism to compute the hierarchical context fed into the decoder.",
  "A Hierarchical Model for Data-to-Text Generation 3 We report experiments on the RotoWire benchmark [39] which contains around 5K statistical tables of NBA basketball games paired with human- written descriptions. Our model is compared to several state-of-the-art models. Results show that the proposed architecture outperforms previous models on BLEU score and is generally better on qualitative metrics. In the following, we \ufb01rst present a state-of-the art of data-to-text literature (Section 2), and then describe our proposed hierarchical data encoder (Section 3). The evaluation protocol is presented in Section 4, followed by the results (Sec- tion 5). Section 6 concludes the paper and presents perspectives. 2 Related Work Until recently, e\ufb00orts to bring out semantics from structured-data relied heavily on expert knowledge [6,30]. For example, in order to better transcribe numerical time series of weather data to a textual forecast, Reiter et al. [30] devise complex template schemes in collaboration with weather experts to build a consistent set of data-to-word rules. Modern approaches to the wide range of tasks based on structured-data (e.g.",
  "[30] devise complex template schemes in collaboration with weather experts to build a consistent set of data-to-word rules. Modern approaches to the wide range of tasks based on structured-data (e.g. table retrieval [7,41], table classi\ufb01cation [9], question answering [12]) now pro- pose to leverage progress in deep learning to represent these data into a semantic vector space (also called embedding space). In parallel, an emerging task, called \u201cdata-to-text\u201d, aims at describing structured data into a natural language de- scription. This task stems from the neural machine translation (NMT) domain, and early work [1,15,39] represent the data records as a single sequence of facts to be entirely translated into natural language. Wiseman et al. [39] show the lim- its of traditional NMT systems on larger structured-data, where NMT systems fail to accurately extract salient elements. To improve these models, a number of work [16,28,40] proposed innovating decoding modules based on planning and templates, to ensure factual and co- herent mentions of records in generated descriptions. For example, Puduppully et al.",
  "To improve these models, a number of work [16,28,40] proposed innovating decoding modules based on planning and templates, to ensure factual and co- herent mentions of records in generated descriptions. For example, Puduppully et al. [28] propose a two-step decoder which \ufb01rst targets speci\ufb01c records and then use them as a plan for the actual text generation. Similarly, Li et al. [16] proposed a delayed copy mechanism where their decoder also acts in two steps: 1) using a classical LSTM decoder to generate delexicalized text and 2) using a pointer network [38] to replace placeholders by records from the input data. Closer to our work, very recent work [18,17,29] have proposed to take into account the data structure. More particularly, Puduppully et al. [29] follow entity-centric theories [10,20] and propose a model based on dynamic entity representation at decoding time. It consists in conditioning the decoder on en- tity representations that are updated during inference at each decoding step. On the other hand, Liu et al.",
  "[29] follow entity-centric theories [10,20] and propose a model based on dynamic entity representation at decoding time. It consists in conditioning the decoder on en- tity representations that are updated during inference at each decoding step. On the other hand, Liu et al. [18,17] rather focus on introducing structure into the encoder. For instance, they propose a dual encoder [17] which encodes sepa- rately the sequence of element names and the sequence of element values. These approaches are however designed for single-entity data structures and do not account for delimitation between entities.",
  "4 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari Our contribution di\ufb00ers from previous work in several aspects. First, instead of \ufb02atly concatenating elements from the data-structure and encoding them as a sequence [18,28,39], we constrain the encoding to the underlying structure of the input data, so that the delimitation between entities remains clear throughout the process. Second, unlike all works in the domain, we exploit the Transformer architecture [36] and leverage its particularity to directly compare elements with each others in order to avoid arbitrary assumptions on their ordering. Finally, in contrast to [5,29] that use a complex updating mechanism to obtain a dynamic representation of the input data and its entities, we argue that explicit hierar- chical encoding naturally guides the decoding process via hierarchical attention. 3 Hierarchical Encoder Model for Data-to-Text In this section we introduce our proposed hierarchical model taking into account the data structure. We outline that the decoding component aiming to generate descriptions is considered as a black-box module so that our contribution is focused on the encoding module.",
  "3 Hierarchical Encoder Model for Data-to-Text In this section we introduce our proposed hierarchical model taking into account the data structure. We outline that the decoding component aiming to generate descriptions is considered as a black-box module so that our contribution is focused on the encoding module. We \ufb01rst describe the model overview, before detailing the hierarchical encoder and the associated hierarchical attention. 3.1 Notation and General Overview Let\u2019s consider the following notations: \u2022 An entity ei is a set of Ji unordered records {ri,1, ..., ri,j, ..., ri,Ji}; where record ri,j is de\ufb01ned as a pair of key ki,j and value vi,j. We outline that Ji might di\ufb00er between entities. \u2022 A data-structure s is an unordered set of I entities ei. We thus denote s := {e1, ..., ei, ..., eI}. \u2022 For each data-structure, a textual description y is associated. We refer to the \ufb01rst t words of a description y as y1:t. Thus, the full sequence of words can be noted as y = y1:T .",
  "\u2022 For each data-structure, a textual description y is associated. We refer to the \ufb01rst t words of a description y as y1:t. Thus, the full sequence of words can be noted as y = y1:T . \u2022 The dataset D is a collection of N aligned (data-structure, description) pairs (s, y). For instance, Figure 1 illustrates a data-structure associated with a description. The data-structure includes a set of entities (Hawks, Magic, Al Horford, Je\ufb00 Teague, ...). The entity Je\ufb00Teague is modeled as a set of records {(PTS, 17), (REB, 0), (AST, 7) ...} in which, e.g., the record (PTS, 17) is characterized by a key (PTS) and a value (17).",
  "For each data-structure s in D, the objective function aims to generate a description \u02c6y as close as possible to the ground truth y. This objective function optimizes the following log-likelihood over the whole dataset D: arg max \u03b8 L(\u03b8) = arg max \u03b8 X (s,y)\u2208D log P(\u02c6y = y | s; \u03b8) (1) where \u03b8 stands for the model parameters and P(\u02c6y = y | s; \u03b8) the probability of the model to generate the adequate description y for table s.",
  "A Hierarchical Model for Data-to-Text Generation 5 Fig. 2: Diagram of the proposed hierarchical encoder. Once the records are embedded, the low-level encoder works on each entity independently (A); then the high-level en- coder encodes the collection of entities (B). In circles, we represent the hierarchical attention scores: the \u03b1 scores at the entity level and the \u03b2 scores at the record level. During inference, we generate the sequence \u02c6y\u2217with the maximum a posteriori probability conditioned on table s. Using the chain rule, we get: \u02c6y\u2217 1:T = arg max \u02c6y1:T T Y t=1 P(\u02c6yt|\u02c6y1:t\u22121; s; \u03b8) (2) This equation is intractable in practice, we approximate a solution using beam search, as in [18,17,28,29,39]. Our model follows the encoder-decoder architecture [2]. Because our contri- bution focuses on the encoding process, we chose the decoding module used in [28,39]: a two-layers LSTM network with a copy mechanism.",
  "Our model follows the encoder-decoder architecture [2]. Because our contri- bution focuses on the encoding process, we chose the decoding module used in [28,39]: a two-layers LSTM network with a copy mechanism. In order to super- vise this mechanism, we assume that each record value that also appears in the target is copied from the data-structure and we train the model to switch be- tween freely generating words from the vocabulary and copying words from the input. We now describe the hierarchical encoder and the hierarchical attention. 3.2 Hierarchical Encoding Model As outlined in Section 2, most previous work [16,28,29,39,40] make use of \ufb02at encoders that do not exploit the data structure. To keep the semantics of each element from the data-structure, we propose a hierarchical encoder which relies on two modules. The \ufb01rst one (module A in Figure 2) is called low-level encoder and encodes entities on the basis of their records; the second one (module B), called high-level encoder, encodes the data-structure on the basis of its underlying entities.",
  "The \ufb01rst one (module A in Figure 2) is called low-level encoder and encodes entities on the basis of their records; the second one (module B), called high-level encoder, encodes the data-structure on the basis of its underlying entities. In the low-level encoder, the traditional embedding layer is replaced by a record embedding layer as in [18,28,39]. We present in what follows the record embedding layer and introduce our two hierarchical modules.",
  "6 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari Record Embedding Layer. The \ufb01rst layer of the network consists in learn- ing two embedding matrices to embed the record keys and values. Keys ki,j are embedded to ki,j \u2208Rd and values vi,j to vi,j \u2208Rd, with d the size of the embed- ding. As in previous work [18,28,39], each record embedding ri,j is computed by a linear projection on the concatenation [ki,j; vi,j] followed by a non linearity: ri,j = ReLU(Wr[ki,j; vi,j] + br) (3) where Wr \u2208R2d\u00d7d and br \u2208Rd are learnt parameters. The low-level encoder aims at encoding a collection of records belonging to the same entity while the high-level encoder encodes the whole set of entities. Both the low-level and high-level encoders consider their input elements as un- ordered. We use the Transformer architecture from [36].",
  "The low-level encoder aims at encoding a collection of records belonging to the same entity while the high-level encoder encodes the whole set of entities. Both the low-level and high-level encoders consider their input elements as un- ordered. We use the Transformer architecture from [36]. For each encoder, we have the following peculiarities: \u2013 the Low-level encoder encodes each entity ei on the basis of its record embeddings ri,j. Each record embedding ri,j is compared to other record embeddings to learn its \ufb01nal hidden representation hi,j. Furthermore, we add a special record [ENT] for each entity, illustrated in Figure 2 as the last record. Since entities might have a variable number of records, this token allows to aggregate \ufb01nal hidden record representations {hi,j}Ji j=1 in a \ufb01xed- sized representation vector hi. \u2013 the High-level encoder encodes the data-structure on the basis of its entity representation hi. Similarly to the Low-level encoder, the \ufb01nal hidden state ei of an entity is computed by comparing entity representation hi with each others. The data-structure representation z is computed as the mean of these entity representations, and is used for the decoder initialization.",
  "Similarly to the Low-level encoder, the \ufb01nal hidden state ei of an entity is computed by comparing entity representation hi with each others. The data-structure representation z is computed as the mean of these entity representations, and is used for the decoder initialization. 3.3 Hierarchical attention To fully leverage the hierarchical structure of our encoder, we propose two vari- ants of hierarchical attention mechanism to compute the context fed to the decoder module. \u2022 Traditional Hierarchical Attention. As in [29], we hypothesize that a dy- namic context should be computed in two steps: \ufb01rst attending to entities, then to records corresponding to these entities. To implement this hierarchical atten- tion, at each decoding step t, the model learns a \ufb01rst set of attention scores \u03b1i,t over entities ei and a second set of attention scores \u03b2i,j,t over records ri,j belonging to entity ei. The \u03b1i,t scores are normalized to form a distribution over all entities ei, and \u03b2i,j,t scores are normalized to form a distribution over records ri,j of entity ei.",
  "The \u03b1i,t scores are normalized to form a distribution over all entities ei, and \u03b2i,j,t scores are normalized to form a distribution over records ri,j of entity ei. Each entity is then represented as a weighted sum of its record embeddings, and the entire data structure is represented as a weighted sum of the entity representations. The dynamic context is computed as: ct = I X i=1 (\u03b1i,t \u0000 X j \u03b2i,j,tri,j \u0001 ) (4) where \u03b1i,t \u221dexp(dtW\u03b1ei) and \u03b2i,j,t \u221dexp(dtW\u03b2hi,j) (5)",
  "A Hierarchical Model for Data-to-Text Generation 7 where dt is the decoder hidden state at time step t, W\u03b1 \u2208Rd\u00d7d and W\u03b2 \u2208Rd\u00d7d are learnt parameters, P i \u03b1i,t = 1, and for all i \u2208{1, ..., I} P j \u03b2i,j,t = 1. \u2022 Key-guided Hierarchical Attention. This variant follows the intuition that once an entity is chosen for mention (thanks to \u03b1i,t), only the type of records is important to determine the content of the description. For example, when deciding to mention a player, all experts automatically report his score without consideration of its speci\ufb01c value. To test this intuition, we model the attention scores by computing the \u03b2i,j,t scores from equation (5) solely on the embedding of the key rather than on the full record representation hi,j: \u02c6\u03b2i,j,t \u221dexp(dtWa2ki,j) (6) Please note that the di\ufb00erent embeddings and the model parameters pre- sented in the model components are learnt using Equation 1.",
  "4 Experimental setup 4.1 The Rotowire dataset To evaluate the e\ufb00ectiveness of our model, and demonstrate its \ufb02exibility at handling heavy data-structure made of several types of entities, we used the Ro- toWire dataset [39]. It includes basketball games statistical tables paired with journalistic descriptions of the games, as can be seen in the example of Fig- ure 1. The descriptions are professionally written and average 337 words with a vocabulary size of 11.3K. There are 39 di\ufb00erent record keys, and the average number of records (resp. entities) in a single data-structure is 628 (resp. 28). En- tities are of two types, either team or player, and player descriptions depend on their involvement in the game. We followed the data partitions introduced with the dataset and used a train/validation/test sets of respectively 3, 398/727/728 (data-structure, description) pairs. 4.2 Evaluation metrics We evaluate our model through two types of metrics. The BLEU score [23] aims at measuring to what extent the generated descriptions are literally closed to the ground truth.",
  "4.2 Evaluation metrics We evaluate our model through two types of metrics. The BLEU score [23] aims at measuring to what extent the generated descriptions are literally closed to the ground truth. The second category designed by [39] is more qualitative. BLEU Score. The BLEU score [23] is commonly used as an evaluation metric in text generation tasks. It estimates the correspondence between a machine output and that of a human by computing the number of co-occurrences for ngrams (n \u22081, 2, 3, 4) between the generated candidate and the ground truth. We use the implementation code released by [27]. Information extraction-oriented metrics. These metrics estimate the ability of our model to integrate elements from the table in its descriptions. Particularly, they compare the gold and generated descriptions and measure to what extent the extracted relations are aligned or di\ufb00er. To do so, we follow the protocol",
  "8 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari presented in [39]. First, we apply an information extraction (IE) system trained on labeled relations from the gold descriptions of the RotoWire train dataset. Entity-value pairs are extracted from the descriptions. For example, in the sen- tence Isaiah Thomas led the team in scoring, totaling 23 points [...]., an IE tool will extract the pair (Isaiah Thomas, 23, PTS). Second, we compute three met- rics on the extracted information: \u2022 Relation Generation (RG) estimates how well the system is able to gener- ate text containing factual (i.e., correct) records. We measure the precision and absolute number (denoted respectively RG-P% and RG-#) of unique relations r extracted from \u02c6y1:T that also appear in s. \u2022 Content Selection (CS) measures how well the generated document matches the gold document in terms of mentioned records.",
  "We measure the precision and absolute number (denoted respectively RG-P% and RG-#) of unique relations r extracted from \u02c6y1:T that also appear in s. \u2022 Content Selection (CS) measures how well the generated document matches the gold document in terms of mentioned records. We measure the precision and recall (denoted respectively CS-P% and CS-R%) of unique relations r extracted from \u02c6y1:T that are also extracted from y1:T . \u2022 Content Ordering (CO) analyzes how well the system orders the records discussed in the description. We measure the normalized Damerau-Levenshtein distance [3] between the sequences of records extracted from \u02c6y1:T that are also extracted from y1:T . CS primarily targets the \u201cwhat to say\u201d aspect of evaluation, CO targets the \u201chow to say it\u201d aspect, and RG targets both. Note that for CS, CO, RG-% and BLEU metrics, higher is better; which is not true for RG-#. The IE system used in the experiments is able to extract an average of 17 factual records from gold descriptions.",
  "Note that for CS, CO, RG-% and BLEU metrics, higher is better; which is not true for RG-#. The IE system used in the experiments is able to extract an average of 17 factual records from gold descriptions. In order to mimic a human expert, a generative system should approach this number and not overload generation with brute facts. 4.3 Baselines We compare our hierarchical model against three systems. For each of them, we report the results of the best performing models presented in each paper. \u2022 Wiseman [39] is a standard encoder-decoder system with copy mechanism. \u2022 Li [16] is a standard encoder-decoder with a delayed copy mechanism: text is \ufb01rst generated with placeholders, which are replaced by salient records extracted from the table by a pointer network. \u2022 Puduppully-plan [28] acts in two steps: a \ufb01rst standard encoder-decoder generates a plan, i.e. a list of salient records from the table; a second standard encoder-decoder generates text from this plan. \u2022 Puduppully-updt [29].",
  "\u2022 Puduppully-plan [28] acts in two steps: a \ufb01rst standard encoder-decoder generates a plan, i.e. a list of salient records from the table; a second standard encoder-decoder generates text from this plan. \u2022 Puduppully-updt [29]. It consists in a standard encoder-decoder, with an added module aimed at updating record representations during the genera- tion process. At each decoding step, a gated recurrent network computes which records should be updated and what should be their new representation. Model scenarios We test the importance of the input structure by training di\ufb00erent variants of the proposed architecture: \u2022 Flat, where we feed the input sequentially to the encoder, losing all notion of hierarchy. As a consequence, the model uses standard attention. This variant",
  "A Hierarchical Model for Data-to-Text Generation 9 BLEU RG CS CO Nb P% # P% R% F1 Params Gold descriptions 100 96.11 17.31 100 100 100 100 Wiseman 14.5 75.62 16.83 32.80 39.93 36.2 15.62 45M Li 16.19 84.86 19.31 30.81 38.79 34.34 16.34 - Pudupully-plan 16.5 87.47 34.28 34.18 51.22 41 18.58 35M Puduppully-updt 16.2 92.69 30.11 38.64 48.51 43.01 20.17 23M Flat 16.7.2 76.621 18.54.6 31.67.7 42.91 36.42.4 14.64.3 14M Hierarchical-kv 17.3 89.041 21.46.9 38.571.2 51.50.",
  "621 18.54.6 31.67.7 42.91 36.42.4 14.64.3 14M Hierarchical-kv 17.3 89.041 21.46.9 38.571.2 51.50.9 44.19.7 18.70.7 14M Hierarchical-k 17.5.3 89.461.4 21.171.4 39.471.4 51.641 44.7.6 18.90.7 14M Table 1: Evaluation on the RotoWire testset using relation generation (RG) count (#) and precision (P%), content selection (CS) precision (P%) and recall (R%), content ordering (CO), and BLEU. -: number of parameters unavailable. is closest to Wiseman, with the exception that we use a Transformer to encode the input sequence instead of an RNN. \u2022 Hierarchical-kv is our full hierarchical model, with traditional hierarchi- cal attention, i.e. where attention over records is computed on the full record encoding, as in equation (5).",
  "\u2022 Hierarchical-kv is our full hierarchical model, with traditional hierarchi- cal attention, i.e. where attention over records is computed on the full record encoding, as in equation (5). \u2022 Hierarchical-k is our full hierarchical model, with key-guided hierarchical attention, i.e. where attention over records is computed only on the record key representations, as in equation (6). 4.4 Implementation details The decoder is the one used in [28,29,39] with the same hyper-parameters. For the encoder module, both the low-level and high-level encoders use a two-layers multi-head self-attention with two heads. To \ufb01t with the small number of record keys in our dataset (39), their embedding size is \ufb01xed to 20. The size of the record value embeddings and hidden layers of the Transformer encoders are both set to 300. We use dropout at rate 0.5. The models are trained with a batch size of 64.",
  "The size of the record value embeddings and hidden layers of the Transformer encoders are both set to 300. We use dropout at rate 0.5. The models are trained with a batch size of 64. We follow the training procedure in [36] and train the model for a \ufb01xed number of 25K updates, and average the weights of the last 5 checkpoints (at every 1K updates) to ensure more stability across runs. All models were trained with the Adam optimizer [13]; the initial learning rate is 0.001, and is reduced by half every 10K steps. We used beam search with beam size of 5 during inference. All the models are implemented in OpenNMT-py [14]. All code is available at https://github.com/KaijuML/data-to-text-hierarchical 5 Results Our results on the RotoWire testset are summarized in Table 1. For each pro- posed variant of our architecture, we report the mean score over ten runs, as well as the standard deviation in subscript. Results are compared to baselines [28,29,39] and variants of our models. We also report the result of the oracle",
  "10 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari Fig. 3: Right: Comparison of a generated sentence from Hierarchical-k and Hierarchical- kv. Left: Attention scores over entities (top) and over records inside the selected entity (bottom) for both variants, during the decoding of respectively 26 or 31 (circled in red). (metrics on the gold descriptions). Please note that gold descriptions trivially obtain 100% on all metrics expect RG, as they are all based on comparison with themselves. RG scores are di\ufb00erent, as the IE system is imperfect and fails to extract accurate entities 4% of the time. RG-# is an absolute count. Ablation studies To evaluate the impact of our model components, we \ufb01rst com- pare scenarios Flat, Hierarchical-k, and Hierarchical-kv. As shown in Table 1, we can see the lower results obtained by the Flat scenario compared to the other scenarios (e.g. BLEU 16.7 vs. 17.5 for resp.",
  "As shown in Table 1, we can see the lower results obtained by the Flat scenario compared to the other scenarios (e.g. BLEU 16.7 vs. 17.5 for resp. Flat and Hierarchical-k), suggest- ing the e\ufb00ectiveness of encoding the data-structure using a hierarchy. This is expected, as losing explicit delimitation between entities makes it harder a) for the encoder to encode semantics of the objects contained in the table and b) for the attention mechanism to extract salient entities/records. Second, the comparison between scenario Hierarchical-kv and Hierarchical-k shows that omitting entirely the in\ufb02uence of the record values in the attention mechanism is more e\ufb00ective: this last variant performs slightly better in all met- rics excepted CS-R%, reinforcing our intuition that focusing on the structure modeling is an important part of data encoding as well as con\ufb01rming the intu- ition explained in Section 3.3: once an entity is selected, facts about this entity are relevant based on their key, not value which might add noise.",
  "To illustrate this intuition, we depict in Figure 3 attention scores (recall \u03b1i,t and \u03b2i,j,t from equations (5) and (6)) for both variants Hierarchical-kv and Hierarchical-k. We particularly focus on the timestamp where the models should mention the num- ber of points scored during the \ufb01rst quarter of the game. Scores of Hierarchical-k are sharp, with all of the weight on the correct record (PTS QTR1, 26) whereas scores of Hierarchical-kv are more distributed over all PTS QTR records, ulti- mately failing to retrieve the correct one. Comparison w.r.t. baselines. From a general point of view, we can see from Table 1 that our scenarios obtain signi\ufb01cantly higher results in terms of BLEU",
  "A Hierarchical Model for Data-to-Text Generation 11 The Atlanta Hawks ( 46 - 12 ) defeated the Orlando Magic ( 19 - 41 ) 95 - 88 on Monday at Philips Arena in Atlanta. The Hawks got out to a quick start in this one, out - scoring the Magic 28 - 16 in the \ufb01rst quarter alone. Along with the quick start, the Hawks were able to hold o\ufb00the Magic late in the fourth quarter, out - scoring the Magic 19 - 21. The Hawks were led by Nikola Vucevic, who went 10 - for - 16 from the \ufb01eld and 0 - for - 0 from the three-point line to score a team - high of 21 points, while also adding 15 rebounds in 37 minutes. It was his second double - double in a row, a stretch where he\u2019s averaging 22 points and 17 rebounds. Notching a double - double of his own, Al Horford recorded 17 points ( 7 - 9 FG , 0 - 0 3Pt , 3 - 4 FT ), 13 rebounds and four steals.",
  "Notching a double - double of his own, Al Horford recorded 17 points ( 7 - 9 FG , 0 - 0 3Pt , 3 - 4 FT ), 13 rebounds and four steals. He\u2019s now averaging 15 points and 6 rebounds on the year. Paul Millsap had a strong showing , posting 20 points ( 8 - 17 FG , 4 - 7 3Pt , 0 - 2 FT ), four rebounds and three blocked shots. He\u2019s been a pleasant surprise for the Magic in the second half, as he\u2019s averaged 14 points and 5 rebounds over his last three games. DeMarre Carroll was the other starter in double \ufb01gures, \ufb01nishing with 15 points ( 6 - 12 FG , 3 - 6 3Pt ), eight rebounds and three steals. He\u2019s had a nice stretch of three games , averaging 24 points, 3 rebounds and 2 assists over that span.",
  "He\u2019s had a nice stretch of three games , averaging 24 points, 3 rebounds and 2 assists over that span. Tobias Harris was the only other Magic player to reach double \ufb01gures, scoring 15 points ( 5 - 9 FG , 2 - 4 3Pt , 3 - 4 FT ). The Magic \u2019s next game will be at home against the Miami Heat on Wednesday, while the Magic will travel to Charlotte to play the Hornets on Wednesday. Fig. 4: Text generated by our best model. Entites are boldfaced, factual mentions are in green, erroneous mentions in red and hallucinations are in blue. over all models; our best model Hierarchical-k reaching 17.5 vs. 16.5 against the best baseline. This means that our models learns to generate \ufb02uent sequences of words, close to the gold descriptions, adequately picking up on domain lingo. Qualitative metrics are either better or on par with baselines. We show in Figure 4 a text generated by our best model, which can be directly compared to the gold description in Figure 1.",
  "Qualitative metrics are either better or on par with baselines. We show in Figure 4 a text generated by our best model, which can be directly compared to the gold description in Figure 1. Generation is \ufb02uent and contains domain-speci\ufb01c expressions. As re\ufb02ected in Table 1, the number of correct mentions (in green) outweights the number of incorrect mentions (in red). Please note that, as in previous work [16,28,29,39], generated texts still contain a number of incorrect facts, as well hallucinations (in blue): sentences that have no basis in the input data (e.g. \u201c[...] he\u2019s now averaging 22 points [...].\u201d). While not the direct focus of our work, this highlights that any operation meant to enrich the semantics of structured data can also enrich the data with incorrect facts. Speci\ufb01cally, regarding all baselines, we can outline the following statements. \u2022 Our hierarchical models achieve signi\ufb01cantly better scores on all metrics when compared to the \ufb02at architecture Wiseman, reinforcing the crucial role of structure in data semantics and saliency.",
  "Speci\ufb01cally, regarding all baselines, we can outline the following statements. \u2022 Our hierarchical models achieve signi\ufb01cantly better scores on all metrics when compared to the \ufb02at architecture Wiseman, reinforcing the crucial role of structure in data semantics and saliency. The analysis of RG metrics shows that Wiseman seems to be the more naturalistic in terms of number of factual mentions (RG#) since it is the closest scenario to the gold value (16.83 vs. 17.31 for resp. Wiseman and Hierarchical-k). However, Wiseman achieves only 75.62% of precision, e\ufb00ectively mentioning on average a total of 22.25 records (wrong or accurate), where our model Hierarchical-k scores a precision of 89.46%, leading to 23.66 total mentions, just slightly above Wiseman. \u2022 The comparison between the Flat scenario and Wiseman is particularly interesting. Indeed, these two models share the same intuition to \ufb02atten the data-structure. The only di\ufb00erence stands on the encoder mechanism: bi-LSTM vs. Transformer, for Wiseman and Flat respectively.",
  "Indeed, these two models share the same intuition to \ufb02atten the data-structure. The only di\ufb00erence stands on the encoder mechanism: bi-LSTM vs. Transformer, for Wiseman and Flat respectively. Results shows that our Flat scenario obtains a signi\ufb01cant higher BLEU score (16.7 vs. 14.5) and generates \ufb02uent descriptions with accurate mentions (RG-P%) that are also included in the gold descriptions (CS-R%). This suggests that introducing the Transformer architecture is promising way to implicitly account for data structure.",
  "12 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari \u2022 Our hierarchical models outperform the two-step decoders of Li and Puduppully-plan on both BLEU and all qualitative metrics, showing that captur- ing structure in the encoding process is more e\ufb00ective that predicting a structure in the decoder (i.e., planning or templating). While our models sensibly outper- form in precision at factual mentions, the baseline Puduppully-plan reaches 34.28 mentions on average, showing that incorporating modules dedicated to entity ex- traction leads to over-focusing on entities; contrasting with our models that learn to generate more balanced descriptions. \u2022 The comparison with Puduppully-updt shows that dynamically updating the encoding across the generation process can lead to better Content Ordering (CO) and RG-P%. However, this does not help with Content Selection (CS) since our best model Hierarchical-k obtains slightly better scores. Indeed, Puduppully- updt updates representations after each mention allowing to keep track of the mention history.",
  "However, this does not help with Content Selection (CS) since our best model Hierarchical-k obtains slightly better scores. Indeed, Puduppully- updt updates representations after each mention allowing to keep track of the mention history. This guides the ordering of mentions (CO metric), each step limiting more the number of candidate mentions (increasing RG-P%). In con- trast, our model encodes saliency among records/entities more e\ufb00ectively (CS metric). We note that while our model encodes the data-structure once and for all, Puduppully-updt recomputes, via the updates, the encoding at each step and therefore signi\ufb01cantly increases computation complexity. Combined with their RG-# score of 30.11, we argue that our model is simpler, and obtains \ufb02uent description with accurate mentions in a more human-like fashion. We would also like to draw attention to the number of parameters used by those architectures. We note that our scenarios relies on a lower number of parameters (14 millions) compared to all baselines (ranging from 23 to 45 millions).",
  "We would also like to draw attention to the number of parameters used by those architectures. We note that our scenarios relies on a lower number of parameters (14 millions) compared to all baselines (ranging from 23 to 45 millions). This outlines the e\ufb00ectiveness in the design of our model relying on a structure encoding, in contrast to other approach that try to learn the structure of data/descriptions from a linearized encoding. 6 Conclusion and future work In this work we have proposed a hierarchical encoder for structured data, which 1) leverages the structure to form e\ufb03cient representation of its input; 2) has strong synergy with the hierarchical attention of its associated decoder. This results in an e\ufb00ective and more light-weight model. Experimental evaluation on the RotoWire benchmark shows that our model outperforms competitive baselines in terms of BLEU score and is generally better on qualitative metrics. This way of representing structured databases may lead to automatic inference and enrichment, e.g., by comparing entities. This direction could be driven by very recent operation-guided networks [35,21].",
  "This way of representing structured databases may lead to automatic inference and enrichment, e.g., by comparing entities. This direction could be driven by very recent operation-guided networks [35,21]. In addition, we note that our approach can still lead to erroneous facts or even hallucinations. An interesting perspective might be to further constrain the model on the data structure in order to prevent inaccurate of even contradictory descriptions. 7 Acknowledgements We would like to thank the H2020 project AI4EU (825619) which partially sup- ports Laure Soulier and Patrick Gallinari.",
  "A Hierarchical Model for Data-to-Text Generation 13 References 1. Agarwal, S., Dymetman, M.: A surprisingly e\ufb00ective out-of-the-box char2char model on the E2E NLG challenge dataset. In: Proceedings of the 18th Annual SIGdial Meeting on Discourse and Dialogue, Saarbr\u00a8ucken, Germany, August 15- 17, 2017. pp. 158\u2013163 (2017), https://www.aclweb.org/anthology/W17-5519/ 2. Bahdanau, D., Cho, K., Bengio, Y.: Neural machine translation by jointly learning to align and translate (2014), http://arxiv.org/abs/1409.0473, cite arxiv:1409.0473Comment: Accepted at ICLR 2015 as oral presentation 3. Brill, E., Moore, R.C.: An improved error model for noisy channel spelling cor- rection. In: Proceedings of the 38th Annual Meeting on Association for Compu- tational Linguistics. pp. 286\u2013293.",
  "Brill, E., Moore, R.C.: An improved error model for noisy channel spelling cor- rection. In: Proceedings of the 38th Annual Meeting on Association for Compu- tational Linguistics. pp. 286\u2013293. ACL \u201900, Association for Computational Lin- guistics, Stroudsburg, PA, USA (2000). https://doi.org/10.3115/1075218.1075255, https://doi.org/10.3115/1075218.1075255 4. Chen, D.L., Mooney, R.J.: Learning to sportscast: A test of grounded lan- guage acquisition. In: Proceedings of the 25th International Conference on Machine Learning. pp. 128\u2013135. ICML \u201908, ACM, New York, NY, USA (2008). https://doi.org/10.1145/1390156.1390173, http://doi.acm.org/10.1145/ 1390156.1390173 5. Clark, E., Ji, Y., Smith, N.A.",
  "https://doi.org/10.1145/1390156.1390173, http://doi.acm.org/10.1145/ 1390156.1390173 5. Clark, E., Ji, Y., Smith, N.A.: Neural text generation in stories using en- tity representations as context. In: Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguis- tics: Human Language Technologies, Volume 1 (Long Papers). pp. 2250\u2013 2260. Association for Computational Linguistics, New Orleans, Louisiana (Jun 2018). https://doi.org/10.18653/v1/N18-1204, https://www.aclweb.org/ anthology/N18-1204 6. Deng, D., Jiang, Y., Li, G., Li, J., Yu, C.: Scalable column concept determination for web tables using large knowledge bases. Proceedings of the VLDB Endowment 6(13), 1606\u20131617 (Aug 2013).",
  "Deng, D., Jiang, Y., Li, G., Li, J., Yu, C.: Scalable column concept determination for web tables using large knowledge bases. Proceedings of the VLDB Endowment 6(13), 1606\u20131617 (Aug 2013). https://doi.org/10.14778/2536258.2536271, http:// dl.acm.org/citation.cfm?doid=2536258.2536271 7. Deng, L., Zhang, S., Balog, K.: Table2vec: Neural Word and Entity Embed- dings for Table Population and Retrieval. In: Proceedings of the 42nd Inter- national ACM SIGIR Conference on Research and Development in Informa- tion Retrieval - SIGIR\u201919. pp. 1029\u20131032. ACM Press, Paris, France (2019). https://doi.org/10.1145/3331184.3331333, http://dl.acm.org/citation.cfm?doid= 3331184.3331333 8.",
  "1029\u20131032. ACM Press, Paris, France (2019). https://doi.org/10.1145/3331184.3331333, http://dl.acm.org/citation.cfm?doid= 3331184.3331333 8. Gatt, A., Krahmer, E.: Survey of the state of the art in natural language generation: Core tasks, applications and evaluation. J. Artif. Int. Res. 61(1), 65\u2013170 (Jan 2018), http://dl.acm.org/citation.cfm?id=3241691.3241693 9. Ghasemi-Gol, M., Szekely, P.A.: Tabvec: Table vectors for classi\ufb01cation of web tables. CoRR abs/1802.06290 (2018), http://arxiv.org/abs/1802.06290 10. Grosz, B., Joshi, A., Weinstein, S.: Centering: A framework for modelling the coherence of discourse. Technical Reports (CIS) (01 1995) 11.",
  "Grosz, B., Joshi, A., Weinstein, S.: Centering: A framework for modelling the coherence of discourse. Technical Reports (CIS) (01 1995) 11. Gulcehre, C., Ahn, S., Nallapati, R., Zhou, B., Bengio, Y.: Pointing the unknown words. In: Proceedings of the 54th Annual Meeting of the Association for Computa- tional Linguistics (Volume 1: Long Papers). pp. 140\u2013149. Association for Computa- tional Linguistics, Berlin, Germany (Aug 2016). https://doi.org/10.18653/v1/P16- 1014 12. Haug, T., Ganea, O., Grnarova, P.: Neural multi-step reasoning for question an- swering on semi-structured tables. In: Advances in Information Retrieval - 40th",
  "14 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari European Conference on IR Research, ECIR 2018, Grenoble, France, March 26-29, 2018, Proceedings. pp. 611\u2013617 (2018). https://doi.org/10.1007/978-3-319-76941- 7 52, https://doi.org/10.1007/978-3-319-76941-7 52 13. Kingma, D.P., Ba, J.: Adam: A method for stochastic optimization (2014), http:// arxiv.org/abs/1412.6980, cite arxiv:1412.6980Comment: Published as a conference paper at the 3rd International Conference for Learning Representations, San Diego, 2015 14. Klein, G., Kim, Y., Deng, Y., Senellart, J., Rush, A.M.: OpenNMT: Open-source toolkit for neural machine translation. In: Proc. ACL (2017).",
  "Klein, G., Kim, Y., Deng, Y., Senellart, J., Rush, A.M.: OpenNMT: Open-source toolkit for neural machine translation. In: Proc. ACL (2017). https://doi.org/10.18653/v1/P17-4012, https://doi.org/10.18653/v1/P17-4012 15. Lebret, R., Grangier, D., Auli, M.: Neural text generation from struc- tured data with application to the biography domain. In: Proceedings of the 2016 Conference on Empirical Methods in Natural Language Process- ing. pp. 1203\u20131213. Association for Computational Linguistics, Austin, Texas (Nov 2016). https://doi.org/10.18653/v1/D16-1128, https://www.aclweb.org/ anthology/D16-1128 16. Li, L., Wan, X.: Point precisely: Towards ensuring the precision of data in gener- ated texts using delayed copy mechanism. In: Proceedings of the 27th International Conference on Computational Linguistics. pp.",
  "Li, L., Wan, X.: Point precisely: Towards ensuring the precision of data in gener- ated texts using delayed copy mechanism. In: Proceedings of the 27th International Conference on Computational Linguistics. pp. 1044\u20131055. Association for Compu- tational Linguistics, Santa Fe, New Mexico, USA (Aug 2018) 17. Liu, T., Luo, F., Xia, Q., Ma, S., Chang, B., Sui, Z.: Hierarchical encoder with auxiliary supervision for neural table-to-text generation: Learning better represen- tation for tables. Proceedings of the AAAI Conference on Arti\ufb01cial Intelligence 33, 6786\u20136793 (07 2019). https://doi.org/10.1609/aaai.v33i01.33016786 18. Liu, T., Wang, K., Sha, L., Chang, B., Sui, Z.: Table-to-text Generation by Structure-aware Seq2seq Learning. In: AAAI (2018) 19. Luong, T., Pham, H., Manning, C.D.",
  "Liu, T., Wang, K., Sha, L., Chang, B., Sui, Z.: Table-to-text Generation by Structure-aware Seq2seq Learning. In: AAAI (2018) 19. Luong, T., Pham, H., Manning, C.D.: E\ufb00ective approaches to attention-based neu- ral machine translation. In: Proceedings of the 2015 Conference on Empirical Meth- ods in Natural Language Processing. pp. 1412\u20131421. Association for Computational Linguistics, Lisbon, Portugal (Sep 2015). https://doi.org/10.18653/v1/D15-1166, https://www.aclweb.org/anthology/D15-1166 20. Mann, W.C., Thompson, S.A.: Rhetorical Structure Theory: Toward a functional theory of text organization. Text - Interdisciplinary Journal for the Study of Dis- course (1988) 21. Nie, F., Wang, J., Yao, J., Pan, R., Lin, C.: Operation-guided neural networks for high \ufb01delity data-to-text generation.",
  "Text - Interdisciplinary Journal for the Study of Dis- course (1988) 21. Nie, F., Wang, J., Yao, J., Pan, R., Lin, C.: Operation-guided neural networks for high \ufb01delity data-to-text generation. In: Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, Brussels, Belgium, October 31 - November 4, 2018. pp. 3879\u20133889 (2018), https://www.aclweb.org/anthology/ D18-1422/ 22. Oremus, W.: The First News Report on the L.A. Earthquake Was Written by a Robot (2014), https://slate.com/technology/2014/03/ quakebot-los-angeles-times-robot-journalist-writes-article-on-la-earthquake.html 23. Papineni, K., Roukos, S., Ward, T., Zhu, W.J.: Bleu: A method for au- tomatic evaluation of machine translation. In: Proceedings of the 40th Annual Meeting on Association for Computational Linguistics. pp. 311\u2013 318.",
  ": Bleu: A method for au- tomatic evaluation of machine translation. In: Proceedings of the 40th Annual Meeting on Association for Computational Linguistics. pp. 311\u2013 318. ACL \u201902, Association for Computational Linguistics, Stroudsburg, PA, USA (2002). https://doi.org/10.3115/1073083.1073135, https://doi.org/10.3115/ 1073083.1073135 24. Pasupat, P., Liang, P.: Compositional semantic parsing on semi-structured ta- bles. In: Proceedings of the 53rd Annual Meeting of the Association for Compu-",
  "A Hierarchical Model for Data-to-Text Generation 15 tational Linguistics and the 7th International Joint Conference on Natural Lan- guage Processing (Volume 1: Long Papers). pp. 1470\u20131480. Association for Com- putational Linguistics, Beijing, China (Jul 2015). https://doi.org/10.3115/v1/P15- 1142, https://www.aclweb.org/anthology/P15-1142 25. Pauws, S., Gatt, A., Krahmer, E., Reiter, E.: Making E\ufb00ective Use of Healthcare Data Using Data-to-Text Technology: Methodologies and Applications, pp. 119\u2013 145 (01 2019) 26. Plachouras, V., Smiley, C., Bretz, H., Taylor, O., Leidner, J.L., Song, D., Schilder, F.: Interacting with \ufb01nancial data using natural language. In: Proceed- ings of the 39th International ACM SIGIR Conference on Research and Devel- opment in Information Retrieval. pp.",
  "In: Proceed- ings of the 39th International ACM SIGIR Conference on Research and Devel- opment in Information Retrieval. pp. 1121\u20131124. SIGIR \u201916, ACM, New York, NY, USA (2016). https://doi.org/10.1145/2911451.2911457, http://doi.acm.org/ 10.1145/2911451.2911457 27. Post, M.: A call for clarity in reporting BLEU scores. In: Proceed- ings of the Third Conference on Machine Translation: Research Papers. pp. 186\u2013191. Association for Computational Linguistics, Belgium, Brussels (Oct 2018). https://doi.org/10.18653/v1/W18-6319, https://www.aclweb.org/ anthology/W18-6319 28. Puduppully, R., Dong, L., Lapata, M.: Data-to-text generation with content selec- tion and planning. In: AAAI (2018) 29.",
  "Puduppully, R., Dong, L., Lapata, M.: Data-to-text generation with content selec- tion and planning. In: AAAI (2018) 29. Puduppully, R., Dong, L., Lapata, M.: Data-to-text generation with entity model- ing. In: Proceedings of the 57th Conference of the Association for Computational Linguistics, ACL 2019, Florence, Italy, July 28- August 2, 2019, Volume 1: Long Papers. pp. 2023\u20132035 (2019), https://www.aclweb.org/anthology/P19-1195/ 30. Reiter, E., Sripada, S., Hunter, J., Yu, J., Davy, I.: Choosing words in computer-generated weather forecasts. Artif. Intell. 167(1-2), 137\u2013169 (Sep 2005). https://doi.org/10.1016/j.artint.2005.06.006, https://doi.org/10.1016/ j.artint.2005.06.006 31.",
  "167(1-2), 137\u2013169 (Sep 2005). https://doi.org/10.1016/j.artint.2005.06.006, https://doi.org/10.1016/ j.artint.2005.06.006 31. Roberti, M., Bonetta, G., Cancelliere, R., Gallinari, P.: Copy mechanism and tai- lored training for character-based data-to-text generation. CoRR abs/1904.11838 (2019), http://arxiv.org/abs/1904.11838 32. Sarma, A.D., Fang, L., Gupta, N., Halevy, A.Y., Lee, H., Wu, F., Xin, R., Yu, C.: Finding related tables. In: SIGMOD (2012), http://i.stanford.edu/\u223canishds/ publications/sigmod12/modi255i-dassarma.pdf 33. See, A., Liu, P.J., Manning, C.D.: Get to the point: Summarization with pointer- generator networks.",
  "See, A., Liu, P.J., Manning, C.D.: Get to the point: Summarization with pointer- generator networks. In: Proceedings of the 55th Annual Meeting of the As- sociation for Computational Linguistics (Volume 1: Long Papers). pp. 1073\u2013 1083. Association for Computational Linguistics, Vancouver, Canada (Jul 2017). https://doi.org/10.18653/v1/P17-1099 34. Sun, H., Ma, H., He, X., Yih, W.t., Su, Y., Yan, X.: Table Cell Search for Question Answering. In: Proceedings of the 25th International Conference on World Wide Web - WWW \u201916. pp. 771\u2013782. ACM Press (2016) 35. Trask, A., Hill, F., Reed, S.E., Rae, J.W., Dyer, C., Blunsom, P.: Neural arithmetic logic units.",
  "pp. 771\u2013782. ACM Press (2016) 35. Trask, A., Hill, F., Reed, S.E., Rae, J.W., Dyer, C., Blunsom, P.: Neural arithmetic logic units. CoRR abs/1808.00508 (2018), http://dblp.uni-trier.de/db/journals/ corr/corr1808.html#abs-1808-00508 36. Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A.N., Kaiser, L., Polosukhin, I.: Attention is all you need. In: Proceedings of the 31st Inter- national Conference on Neural Information Processing Systems. pp. 6000\u20136010. NIPS\u201917, Curran Associates Inc., USA (2017), http://dl.acm.org/citation.cfm?id= 3295222.3295349",
  "16 Cl\u00b4ement Rebu\ufb00el, Laure Soulier, Geo\ufb00rey Scoutheeten, and Patrick Gallinari 37. Vinyals, O., Bengio, S., Kudlur, M.: Order matters: Sequence to sequence for sets. In: International Conference on Learning Representations (ICLR) (2016), http: //arxiv.org/abs/1511.06391 38. Vinyals, O., Fortunato, M., Jaitly, N.: Pointer networks. In: Cortes, C., Lawrence, N.D., Lee, D.D., Sugiyama, M., Garnett, R. (eds.) Advances in Neural Information Processing Systems 28, pp. 2692\u20132700. Curran Associates, Inc. (2015), http:// papers.nips.cc/paper/5866-pointer-networks.pdf 39. Wiseman, S., Shieber, S., Rush, A.: Challenges in data-to-document genera- tion. In: Proceedings of the 2017 Conference on Empirical Methods in Natu- ral Language Processing. pp.",
  "Wiseman, S., Shieber, S., Rush, A.: Challenges in data-to-document genera- tion. In: Proceedings of the 2017 Conference on Empirical Methods in Natu- ral Language Processing. pp. 2253\u20132263. Association for Computational Linguis- tics, Copenhagen, Denmark (Sep 2017). https://doi.org/10.18653/v1/D17-1239, https://www.aclweb.org/anthology/D17-1239 40. Wiseman, S., Shieber, S., Rush, A.: Learning neural templates for text gener- ation. In: Proceedings of the 2018 Conference on Empirical Methods in Natu- ral Language Processing. pp. 3174\u20133187. Association for Computational Linguis- tics, Brussels, Belgium (Oct-Nov 2018). https://doi.org/10.18653/v1/D18-1356, https://www.aclweb.org/anthology/D18-1356 41. Zhang, S., Balog, K.: Web Table Extraction, Retrieval and Augmentation.",
  "https://doi.org/10.18653/v1/D18-1356, https://www.aclweb.org/anthology/D18-1356 41. Zhang, S., Balog, K.: Web Table Extraction, Retrieval and Augmentation. In: Pro- ceedings of the 42nd International ACM SIGIR Conference on Research and De- velopment in Information Retrieval - SIGIR\u201919. pp. 1409\u20131410. ACM Press (2019)"
]